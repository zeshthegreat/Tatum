import{PublicKey as e,TransactionInstruction as t,SystemProgram as r,SYSVAR_RENT_PUBKEY as i}from"@solana/web3.js";import{Buffer as n}from"buffer";import{TOKEN_PROGRAM_ID as a,getMint as s,AccountLayout as o,getAssociatedTokenAddressSync as c,createAssociatedTokenAccountInstruction as u}from"@solana/spl-token";import l from"bn.js";import{serialize as f,deserialize as d,deserializeUnchecked as p}from"borsh";import{sha256 as w}from"@ethersproject/sha2";import{PythHttpClient as g,getPythProgramKeyForCluster as m}from"@pythnetwork/client";import{decode as y,encode as b}from"bech32-buffer";import*as h from"tweetnacl";import S from"bs58";import v from"ipaddr.js";import{encode as k}from"punycode";var A;!function(e){e.SymbolNotFound="SymbolNotFound",e.InvalidSubdomain="InvalidSubdomain",e.FavouriteDomainNotFound="FavouriteDomainNotFound",e.MissingParentOwner="MissingParentOwner",e.U32Overflow="U32Overflow",e.InvalidBufferLength="InvalidBufferLength",e.U64Overflow="U64Overflow",e.NoRecordData="NoRecordData",e.InvalidRecordData="InvalidRecordData",e.UnsupportedRecord="UnsupportedRecord",e.InvalidEvmAddress="InvalidEvmAddress",e.InvalidInjectiveAddress="InvalidInjectiveAddress",e.InvalidARecord="InvalidARecord",e.InvalidAAAARecord="InvalidAAAARecord",e.InvalidRecordInput="InvalidRecordInput",e.InvalidSignature="InvalidSignature",e.AccountDoesNotExist="AccountDoesNotExist",e.MultipleRegistries="MultipleRegistries",e.InvalidReverseTwitter="InvalidReverseTwitter",e.NoAccountData="NoAccountData",e.InvalidInput="InvalidInput",e.InvalidDomain="InvalidDomain",e.InvalidCustomBg="InvalidCustomBackground"}(A||(A={}));class I extends Error{constructor(e,t){super(t),this.name="SNSError",this.type=e,Error.captureStackTrace&&Error.captureStackTrace(this,I)}}class B extends l{toBuffer(){const e=super.toArray().reverse(),t=n.from(e);if(4===t.length)return t;if(t.length>4)throw new I(A.U32Overflow);const r=n.alloc(4);return t.copy(r),r}static fromBuffer(e){if(4!==e.length)throw new I(A.InvalidBufferLength,`Invalid buffer length: ${e.length}`);return new l([...e].reverse().map((e=>`00${e.toString(16)}`.slice(-2))).join(""),16)}}class W extends l{toBuffer(){const e=super.toArray().reverse(),t=n.from(e);if(8===t.length)return t;if(t.length>8)throw new I(A.U64Overflow);const r=n.alloc(8);return t.copy(r),r}static fromBuffer(e){if(8!==e.length)throw new I(A.U64Overflow,`Invalid buffer length: ${e.length}`);return new l([...e].reverse().map((e=>`00${e.toString(16)}`.slice(-2))).join(""),16)}}function E(r,i,a,s,o,c,u,l,f,d,p){const w=[n.from(Int8Array.from([0])),new B(c.length).toBuffer(),c,u.toBuffer(),l.toBuffer()],g=n.concat(w),m=[{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:o,isSigner:!0,isWritable:!0},{pubkey:a,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!1}];return f?m.push({pubkey:f,isSigner:!0,isWritable:!1}):m.push({pubkey:new e(n.alloc(32)),isSigner:!1,isWritable:!1}),d?m.push({pubkey:d,isSigner:!1,isWritable:!1}):m.push({pubkey:new e(n.alloc(32)),isSigner:!1,isWritable:!1}),p&&m.push({pubkey:p,isSigner:!0,isWritable:!1}),new t({keys:m,programId:r,data:g})}function R(e,r,i,a,s){const o=[n.from(Int8Array.from([1])),i.toBuffer(),new B(a.length).toBuffer(),a],c=n.concat(o);return new t({keys:[{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!0,isWritable:!1}],programId:e,data:c})}function D(r,i,a,s,o,c,u){const l=[n.from(Int8Array.from([2])),a.toBuffer()],f=n.concat(l),d=[{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:u||s,isSigner:!0,isWritable:!1}];return o&&d.push({pubkey:o,isSigner:!0,isWritable:!1}),u&&c&&(o||d.push({pubkey:e.default,isSigner:!1,isWritable:!1}),d.push({pubkey:c,isSigner:!1,isWritable:!1})),new t({keys:d,programId:r,data:f})}function x(e,r,i,a){const s=[n.from(Int8Array.from([3]))],o=n.concat(s);return new t({keys:[{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!0,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!0}],programId:e,data:o})}class N{constructor(e){this.tag=9,this.name=e.name,this.space=e.space}serialize(){return f(N.schema,this)}getInstruction(e,i,s,o,c,u,l,f,d,p,w){const g=n.from(this.serialize()),m=[{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:o,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!0},{pubkey:u,isSigner:!1,isWritable:!0},{pubkey:r.programId,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!1},{pubkey:f,isSigner:!0,isWritable:!0},{pubkey:d,isSigner:!1,isWritable:!0},{pubkey:p,isSigner:!1,isWritable:!0},{pubkey:a,isSigner:!1,isWritable:!1},{pubkey:w,isSigner:!1,isWritable:!1}];return new t({keys:m,programId:e,data:g})}}N.schema=new Map([[N,{kind:"struct",fields:[["tag","u8"],["name","string"],["space","u32"]]}]]);class P{constructor(e){this.tag=12,this.name=e.name}serialize(){return f(P.schema,this)}getInstruction(e,r,i,a,s,o,c,u,l,f){const d=n.from(this.serialize());let p=[];return p.push({pubkey:r,isSigner:!1,isWritable:!1}),p.push({pubkey:i,isSigner:!1,isWritable:!1}),p.push({pubkey:a,isSigner:!1,isWritable:!0}),p.push({pubkey:s,isSigner:!1,isWritable:!1}),p.push({pubkey:o,isSigner:!1,isWritable:!1}),p.push({pubkey:c,isSigner:!0,isWritable:!0}),p.push({pubkey:u,isSigner:!1,isWritable:!1}),l&&p.push({pubkey:l,isSigner:!1,isWritable:!0}),f&&p.push({pubkey:f,isSigner:!0,isWritable:!0}),new t({keys:p,programId:e,data:d})}}P.schema=new Map([[P,{kind:"struct",fields:[["tag","u8"],["name","string"]]}]]);class T{constructor(e){this.tag=13,this.name=e.name,this.space=e.space,this.referrerIdxOpt=e.referrerIdxOpt}serialize(){return f(T.schema,this)}getInstruction(e,r,i,a,s,o,c,u,l,f,d,p,w,g,m,y,b){const h=n.from(this.serialize());let S=[];return S.push({pubkey:r,isSigner:!1,isWritable:!1}),S.push({pubkey:i,isSigner:!1,isWritable:!1}),S.push({pubkey:a,isSigner:!1,isWritable:!0}),S.push({pubkey:s,isSigner:!1,isWritable:!0}),S.push({pubkey:o,isSigner:!1,isWritable:!1}),S.push({pubkey:c,isSigner:!1,isWritable:!1}),S.push({pubkey:u,isSigner:!0,isWritable:!0}),S.push({pubkey:l,isSigner:!1,isWritable:!0}),S.push({pubkey:f,isSigner:!1,isWritable:!1}),S.push({pubkey:d,isSigner:!1,isWritable:!1}),S.push({pubkey:p,isSigner:!1,isWritable:!1}),S.push({pubkey:w,isSigner:!1,isWritable:!0}),S.push({pubkey:g,isSigner:!1,isWritable:!1}),S.push({pubkey:m,isSigner:!1,isWritable:!1}),S.push({pubkey:y,isSigner:!1,isWritable:!1}),b&&S.push({pubkey:b,isSigner:!1,isWritable:!0}),new t({keys:S,programId:e,data:h})}}T.schema=new Map([[T,{kind:"struct",fields:[["tag","u8"],["name","string"],["space","u32"],["referrerIdxOpt",{kind:"option",type:"u16"}]]}]]);class H{constructor(e){this.tag=17,this.name=e.name,this.space=e.space}serialize(){return f(H.schema,this)}getInstruction(e,r,i,a,s,o,c,u,l,f,d,p,w,g,m,y,b){const h=n.from(this.serialize());let S=[];return S.push({pubkey:r,isSigner:!1,isWritable:!1}),S.push({pubkey:i,isSigner:!1,isWritable:!1}),S.push({pubkey:a,isSigner:!1,isWritable:!0}),S.push({pubkey:s,isSigner:!1,isWritable:!0}),S.push({pubkey:o,isSigner:!1,isWritable:!1}),S.push({pubkey:c,isSigner:!1,isWritable:!1}),S.push({pubkey:u,isSigner:!0,isWritable:!0}),S.push({pubkey:l,isSigner:!1,isWritable:!0}),S.push({pubkey:f,isSigner:!1,isWritable:!0}),S.push({pubkey:d,isSigner:!1,isWritable:!0}),S.push({pubkey:p,isSigner:!1,isWritable:!0}),S.push({pubkey:w,isSigner:!1,isWritable:!0}),S.push({pubkey:g,isSigner:!1,isWritable:!1}),S.push({pubkey:m,isSigner:!1,isWritable:!1}),S.push({pubkey:y,isSigner:!1,isWritable:!1}),S.push({pubkey:b,isSigner:!1,isWritable:!1}),new t({keys:S,programId:e,data:h})}}H.schema=new Map([[H,{kind:"struct",fields:[["tag","u8"],["name","string"],["space","u32"]]}]]);class L{constructor(){this.tag=16}serialize(){return f(L.schema,this)}getInstruction(e,r,i,a,s,o,c,u,l,f){const d=n.from(this.serialize());let p=[];return p.push({pubkey:r,isSigner:!1,isWritable:!1}),p.push({pubkey:i,isSigner:!1,isWritable:!1}),p.push({pubkey:a,isSigner:!1,isWritable:!0}),p.push({pubkey:s,isSigner:!1,isWritable:!0}),p.push({pubkey:o,isSigner:!1,isWritable:!0}),p.push({pubkey:c,isSigner:!1,isWritable:!0}),p.push({pubkey:u,isSigner:!1,isWritable:!1}),p.push({pubkey:l,isSigner:!0,isWritable:!1}),p.push({pubkey:f,isSigner:!1,isWritable:!0}),new t({keys:p,programId:e,data:d})}}function C(e,r,i,a,s,o){const c=[n.from(Int8Array.from([4])),o.toBuffer()],u=n.concat(c);return new t({keys:[{pubkey:r,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!0,isWritable:!0},{pubkey:a,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!0,isWritable:!1}],programId:e,data:u})}L.schema=new Map([[L,{kind:"struct",fields:[["tag","u8"]]}]]);const M=new e("nftD3vbNkNqfj2Sd3HZwbpw4BxxKWr4AjGb9X38JeZk"),j=n.from("tokenized_name");var F;!function(e){e[e.Uninitialized=0]="Uninitialized",e[e.CentralState=1]="CentralState",e[e.ActiveRecord=2]="ActiveRecord",e[e.InactiveRecord=3]="InactiveRecord"}(F||(F={}));class z{constructor(t){this.tag=t.tag,this.nonce=t.nonce,this.nameAccount=new e(t.nameAccount),this.owner=new e(t.owner),this.nftMint=new e(t.nftMint)}static deserialize(e){return d(this.schema,z,e)}static async retrieve(e,t){const r=await e.getAccountInfo(t);if(!r||!r.data)throw new Error("NFT record not found");return this.deserialize(r.data)}static async findKey(t,r){return await e.findProgramAddress([n.from("nft_record"),t.toBuffer()],r)}}z.schema=new Map([[z,{kind:"struct",fields:[["tag","u8"],["nonce","u8"],["nameAccount",[32]],["owner",[32]],["nftMint",[32]]]}]]);const U=new e("namesLPneVptA9Z5rqUDD9tMTWEJwofgaYwp8cawRkX"),G="SPL Name Service",X=new e("58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx"),K=new e("jCebN34bUfdeUYJT13J1yG16XWQpt5PDx6Mse9GUqhR"),O=new e("ETp9eKXVv1dWwHSpsXRUuXHmw24PwRkttCGVgpZEY9zF"),q=new e("AUoZ3YAhV3b2rZeEH93UMZHXUZcTramBvb4d9YEVySkc"),Z=new e("33m47vH6Eav6jr5Ry86XjhRft2jRBLDnDgPSHoquXi2Z"),V=new e("FvPH7PrVrLGKPfqaf3xJodFTjZriqrAXXLTVWEorTFBi"),Y=new e("4YcexoW3r78zz16J2aqmukBLRwGq6rAvWzJpkYAXqebv"),J=96,Q=new e("DmSyHDSM9eSLyvoLsPvDr5fRRFZ7Bfr3h3ULvWpgQaq7"),_=new e("EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"),$=[new e("3ogYncmMM5CmytsGCqKHydmXmKUZ6sGWvizkzqwT7zb1"),new e("DM1jJCkZZEwY5tmWbgvKRxsDFzXCdbfrYCCH1CtwguEs"),new e("ADCp4QXFajHrhy4f43pD6GJFtQLkdBY2mjS9DfCk7tNW"),new e("2XTgjw8yi1E3Etgj4CUyRD7Zk49gynH2U9gA5N2MY4NP"),new e("5oDWj8vr3vbcq9JZTtwXqrkCMZggMsDzNietvbr1BNfe"),new e("8kJqxAbqbPLGLMgB6FhLcnw2SiUEavx2aEGM3WQGhtJF"),new e("HemvJzwxvVpWBjPETpaseAH395WAxb2G73MeUfjVkK1u")],ee=new Map([["EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v","USDC"],["Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB","USDT"],["So11111111111111111111111111111111111111112","SOL"],["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp","FIDA"],["FeGn77dhg1KXRRFeSwwMiykZnZPw5JXW6naf2aQgZDQf","ETH"],["7i5KKsX2weiTkry7jA4ZwSuXGhs5eJBEjY8vVxR4pfRx","GMT"],["AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB","GST"],["mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So","MSOL"],["DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263","BONK"],["EPeUFDgHRxs9xxEPVaL6kfGQvCon7jmAWKVUHuux1Tpz","BAT"]]),te=new e("AHtgzX45WTKfkPG53L6WYhGEXwQkN1BVknET3sVsLL8J"),re=new e("GcWEQ9K78FV7LEHteFVciYApERk5YvQuFDQPk1yYJVXi"),ie=new e("BPeXUQDqGbzxeK1LJby6ugvCBuo7kRSEUkjD726mUVsz"),ne=new e("72aLKvXeV4aansAQtxKymeXDevT5ed6sCuz9iN62ugPT"),ae=new e("metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s"),se=e=>{const t=G+e,r=w(n.from(t,"utf8")).slice(2);return n.from(r,"hex")},oe=(t,r,i)=>{const a=[t];r?a.push(r.toBuffer()):a.push(n.alloc(32)),i?a.push(i.toBuffer()):a.push(n.alloc(32));const[s]=e.findProgramAddressSync(a,U);return s};async function ce(e,t){const r=se(t.toBase58()),i=oe(r,Z),{registry:n}=await Ae.retrieve(e,i);if(!n.data)throw new I(A.NoAccountData);const a=new l(n.data.slice(0,4),"le").toNumber();return n.data.slice(4,4+a).toString()}async function ue(e,t){let r=[];for(let e of t){const t=se(e.toBase58()),i=oe(t,Z);r.push(i)}return(await Ae.retrieveBatch(e,r)).map((e=>{if(void 0===e||void 0===e.data)return;let t=new l(e.data.slice(0,4),"le").toNumber();return e.data.slice(4,4+t).toString()}))}const le=async(e,t)=>{const r=[{memcmp:{offset:0,bytes:t.toBase58()}},{memcmp:{offset:64,bytes:Z.toBase58()}}],i=await e.getProgramAccounts(U,{filters:r}),n=await ce(e,t),a=i.map((e=>{var t;return null===(t=e.account.data.slice(97).toString("utf-8"))||void 0===t?void 0:t.split("\0").join("")})),s=a.map((e=>de(e+"."+n).pubkey)),o=await e.getMultipleAccountsInfo(s);return a.filter(((e,t)=>!!o[t]))},fe=(e,t=X)=>{let r=se(e);return{pubkey:oe(r,void 0,t),hashed:r}},de=(e,t=!1)=>{e.endsWith(".sol")&&(e=e.slice(0,-4));const r=e.split(".");if(2===r.length){const e=n.from([t?1:0]).toString().concat(r[0]),{pubkey:i}=fe(r[1]);return{...fe(e,i),isSub:!0,parent:i}}if(3===r.length&&t){const{pubkey:e}=fe(r[2]),{pubkey:t}=fe("\0".concat(r[1]),e),i=n.from([1]).toString();return{...fe(i.concat(r[0]),t),isSub:!0,parent:e,isSubRecord:!0}}if(r.length>=3)throw new I(A.InvalidInput);return{...fe(e,X),isSub:!1,parent:void 0}};async function pe(e,t){const r=[{memcmp:{offset:32,bytes:t.toBase58()}},{memcmp:{offset:0,bytes:X.toBase58()}}];return(await e.getProgramAccounts(U,{filters:r})).map((e=>e.pubkey))}async function we(e,t){const r=await pe(e,t),i=await ue(e,r);return r.map(((e,t)=>({pubKey:e,domain:i[t]})))}const ge=async e=>{const t=[{memcmp:{offset:0,bytes:X.toBase58()}}];return await e.getProgramAccounts(U,{dataSlice:{offset:32,length:32},filters:t})},me=(e,t)=>{const{pubkey:r,parent:i}=de(e),n=se(r.toBase58());return oe(n,Z,t?i:void 0)},ye=(e,t)=>{if(!e)throw new I(t)},be=async(t,r)=>{try{const[i]=await e.findProgramAddress([j,r.toBuffer()],M);if("0"===(await s(t,i)).supply.toString())return;const n=[{memcmp:{offset:0,bytes:i.toBase58()}},{memcmp:{offset:64,bytes:"2"}},{dataSize:165}],o=await t.getProgramAccounts(a,{filters:n});if(1!=o.length)return;return new e(o[0].account.data.slice(32,64))}catch{return}},he=async t=>{const r=await t.getProgramAccounts(M,{filters:[{memcmp:{offset:0,bytes:"3"}}]});return r.map((t=>new e(t.account.data.slice(66,98))))},Se=e=>[{memcmp:{offset:32,bytes:e}},{memcmp:{offset:64,bytes:"2"}}],ve=async(e,t)=>{const r=await(async(e,t)=>{const r=[{memcmp:{offset:0,bytes:"3"}},{memcmp:{offset:66,bytes:t.toBase58()}}];return await e.getProgramAccounts(M,{filters:r})})(e,t.mint);if(1===r.length)return z.deserialize(r[0].account.data)},ke=async(e,t)=>{const r=await(async(e,t)=>{const r=[...Se(t.toBase58()),{dataSize:165}],i=(await e.getProgramAccounts(a,{filters:r})).map((e=>o.decode(e.account.data))).map((t=>ve(e,t)));return(await Promise.all(i)).filter((e=>void 0!==e))})(e,t);return(await ue(e,r.map((e=>e.nameAccount)))).map(((e,t)=>({key:r[t].nameAccount,mint:r[t].nftMint,reverse:e}))).filter((e=>!!e.reverse))};class Ae{constructor(t){this.parentName=new e(t.parentName),this.owner=new e(t.owner),this.class=new e(t.class)}static async retrieve(e,t){var r;const i=await e.getAccountInfo(t);if(!i)throw new I(A.AccountDoesNotExist);let n=p(this.schema,Ae,i.data);n.data=null===(r=i.data)||void 0===r?void 0:r.slice(this.HEADER_LEN);return{registry:n,nftOwner:await be(e,t)}}static async _retrieveBatch(e,t){const r=await e.getMultipleAccountsInfo(t),i=e=>{if(!e)return;const t=p(this.schema,Ae,e);return t.data=null==e?void 0:e.slice(this.HEADER_LEN),t};return r.map((e=>i(null==e?void 0:e.data)))}static async retrieveBatch(e,t){let r=[];const i=[...t];for(;i.length>0;)r.push(...await this._retrieveBatch(e,i.splice(0,100)));return r}}async function Ie(e,t){if(!await e.getAccountInfo(t))throw new I(A.AccountDoesNotExist);return Ae.retrieve(e,t)}async function Be(e){const t=G+e,r=w(n.from(t,"utf8")).slice(2);return n.from(r,"hex")}async function We(t,r,i){const a=[t];r?a.push(r.toBuffer()):a.push(n.alloc(32)),i?a.push(i.toBuffer()):a.push(n.alloc(32));const[s]=await e.findProgramAddress(a,U);return s}async function Ee(e,t){const r=await Be(t.toBase58()),i=await We(r,Z),{registry:n}=await Ae.retrieve(e,i);if(!n.data)throw new I(A.NoAccountData);const a=new l(n.data.slice(0,4),"le").toNumber();return n.data.slice(4,4+a).toString()}async function Re(e,t){let r=[];for(let e of t){const t=await Be(e.toBase58()),i=await We(t,Z);r.push(i)}return(await Ae.retrieveBatch(e,r)).map((e=>{if(void 0===e||void 0===e.data)return;let t=new l(e.data.slice(0,4),"le").toNumber();return e.data.slice(4,4+t).toString()}))}Ae.HEADER_LEN=96,Ae.schema=new Map([[Ae,{kind:"struct",fields:[["parentName",[32]],["owner",[32]],["class",[32]]]}]]);const De=async(e,t=X)=>{let r=await Be(e);return{pubkey:await We(r,void 0,t),hashed:r}},xe=async(e,t=!1)=>{e.endsWith(".sol")&&(e=e.slice(0,-4));const r=e.split(".");if(2===r.length){const e=n.from([t?1:0]).toString().concat(r[0]),{pubkey:i}=await De(r[1]);return{...await De(e,i),isSub:!0,parent:i}}if(3===r.length&&t){const{pubkey:e}=await De(r[2]),{pubkey:t}=await De("\0".concat(r[1]),e),i=n.from([1]).toString();return{...await De(i.concat(r[0]),t),isSub:!0,parent:e,isSubRecord:!0}}if(r.length>=3)throw new I(A.InvalidInput);return{...await De(e,X),isSub:!1,parent:void 0}},Ne=async(e,t)=>{const{pubkey:r,parent:i}=await xe(e),n=await Be(r.toBase58());return await We(n,Z,t?i:void 0)};var Pe;!function(e){e.IPFS="IPFS",e.ARWV="ARWV",e.SOL="SOL",e.ETH="ETH",e.BTC="BTC",e.LTC="LTC",e.DOGE="DOGE",e.Email="email",e.Url="url",e.Discord="discord",e.Github="github",e.Reddit="reddit",e.Twitter="twitter",e.Telegram="telegram",e.Pic="pic",e.SHDW="SHDW",e.POINT="POINT",e.BSC="BSC",e.Injective="INJ",e.Backpack="backpack",e.A="A",e.AAAA="AAAA",e.CNAME="CNAME",e.TXT="TXT",e.Background="background"}(Pe||(Pe={}));const Te=new Map([[Pe.SOL,96],[Pe.ETH,20],[Pe.BSC,20],[Pe.Injective,20],[Pe.A,4],[Pe.AAAA,16],[Pe.Background,32]]),He=(e,t,r)=>h.sign.detached.verify(e,t,r.toBytes()),Le=async(t,r)=>{const{pubkey:i}=de(r),{registry:a,nftOwner:s}=await Ae.retrieve(t,i);if(s)return s;try{const i=Ce(r,Pe.SOL),s=await et(t,r);if(!(null==s?void 0:s.data))throw new I(A.NoRecordData);const o=new TextEncoder,c=n.concat([s.data.slice(0,32),i.toBuffer()]),u=o.encode(c.toString("hex"));if(!He(u,s.data.slice(32),a.owner))throw new I(A.InvalidSignature);return new e(s.data.slice(0,32))}catch(e){if(e instanceof Error&&"FetchError"===e.name)throw e}return a.owner},Ce=(e,t)=>{const{pubkey:r}=de(t+"."+e,!0);return r};async function Me(e,t,r,i){const n=Ce(t,r);let{registry:a}=await Ae.retrieve(e,n);if(!a.data)throw new I(A.NoRecordData);if(i)return st(a,r,n);const s=Te.get(r);return a.data=a.data.slice(0,s),a}async function je(e,t,r,i){const n=r.map((e=>Ce(t,e))),a=await Ae.retrieveBatch(e,n);return i?a.map(((e,i)=>{if(e)return st(e,r[i],Ce(t,r[i]))})):a}const Fe=async(e,t)=>await Me(e,t,Pe.IPFS,!0),ze=async(e,t)=>await Me(e,t,Pe.ARWV,!0),Ue=async(e,t)=>await Me(e,t,Pe.ETH,!0),Ge=async(e,t)=>await Me(e,t,Pe.BTC,!0),Xe=async(e,t)=>await Me(e,t,Pe.LTC,!0),Ke=async(e,t)=>await Me(e,t,Pe.DOGE,!0),Oe=async(e,t)=>await Me(e,t,Pe.Email,!0),qe=async(e,t)=>await Me(e,t,Pe.Url,!0),Ze=async(e,t)=>await Me(e,t,Pe.Discord,!0),Ve=async(e,t)=>await Me(e,t,Pe.Github,!0),Ye=async(e,t)=>await Me(e,t,Pe.Reddit,!0),Je=async(e,t)=>await Me(e,t,Pe.Twitter,!0),Qe=async(e,t)=>await Me(e,t,Pe.Telegram,!0),_e=async(e,t)=>await Me(e,t,Pe.Pic,!0),$e=async(e,t)=>await Me(e,t,Pe.SHDW,!0),et=async(e,t)=>await Me(e,t,Pe.SOL),tt=async(e,t)=>await Me(e,t,Pe.POINT,!0),rt=async(e,t)=>await Me(e,t,Pe.BSC,!0),it=async(e,t)=>await Me(e,t,Pe.Injective,!0),nt=async(e,t)=>await Me(e,t,Pe.Backpack,!0),at=async(e,t)=>await Me(e,t,Pe.Background,!0),st=(t,r,i)=>{const a=null==t?void 0:t.data;if(!a)return;if(0===a.compare(n.alloc(a.length)))return;const s=Te.get(r),o=(e=>{const t=Array.from(e);return t.length-1-t.reverse().findIndex((e=>0!==e))+1})(a);if(!s)return a.slice(0,o).toString("utf-8");if(r===Pe.SOL){const e=new TextEncoder,r=n.concat([a.slice(0,32),i.toBuffer()]),s=e.encode(r.toString("hex"));if(He(s,a.slice(32,96),t.owner))return S.encode(a.slice(0,32))}if(s&&o!==s){const e=a.slice(0,o).toString("utf-8");if(r===Pe.Injective){const t=y(e);if("inj"===t.prefix&&20===t.data.length)return e}else if(r===Pe.BSC||r===Pe.ETH){const t=e.slice(0,2),r=e.slice(2);if("0x"===t&&20===n.from(r,"hex").length)return e}else if((r===Pe.A||r===Pe.AAAA)&&v.isValid(e))return e;throw new I(A.InvalidRecordData)}if(r===Pe.ETH||r===Pe.BSC)return"0x"+a.slice(0,s).toString("hex");if(r===Pe.Injective)return b("inj",a.slice(0,s),"bech32");if(r===Pe.A||r===Pe.AAAA)return v.fromByteArray([...a.slice(0,s)]).toString();if(r===Pe.Background)return new e(a.slice(0,s)).toString();throw new I(A.InvalidRecordData)},ot=(t,r)=>{if(!Te.get(r))return r!==Pe.CNAME&&r!==Pe.TXT||(t=k(t)),n.from(t,"utf-8");if(r===Pe.SOL)throw new I(A.UnsupportedRecord,"Use `serializeSolRecord` for SOL record");if(r===Pe.ETH||r===Pe.BSC)return ye("0x"===t.slice(0,2),A.InvalidEvmAddress),n.from(t.slice(2),"hex");if(r===Pe.Injective){const e=y(t);return ye("inj"===e.prefix,A.InvalidInjectiveAddress),ye(20===e.data.length,A.InvalidInjectiveAddress),n.from(e.data)}if(r===Pe.A){const e=v.parse(t).toByteArray();return ye(4===e.length,A.InvalidARecord),n.from(e)}if(r===Pe.AAAA){const e=v.parse(t).toByteArray();return ye(16===e.length,A.InvalidAAAARecord),n.from(e)}if(r===Pe.Background)return new e(t).toBuffer();throw new I(A.InvalidRecordInput)},ct=(e,t,r,i)=>{const a=n.concat([e.toBuffer(),t.toBuffer()]),s=(new TextEncoder).encode(a.toString("hex")),o=He(s,i,r);return ye(o,A.InvalidSignature),n.concat([e.toBuffer(),i])};async function ut(e,t,i,n,a,s,o,c){const u=await Be(t),l=await We(u,o,c),f=s||await e.getMinimumBalanceForRentExemption(i);let d;if(c){const{registry:t}=await Ie(e,c);d=t.owner}return E(U,r.programId,l,a,n,u,new W(f),new B(i),o,c,d)}async function lt(e,t,r,i,n,a){const s=await Be(t),o=await We(s,n,a);let c;c=n||(await Ae.retrieve(e,o)).registry.owner;return R(U,o,new B(r),i,c)}async function ft(e,t,r,i,n,a){const s=await Be(t),o=await We(s,i,n);let c;c=i||(await Ae.retrieve(e,o)).registry.owner;return D(U,o,r,c,i,n,a)}async function dt(e,t,r,i,n){const a=await Be(t),s=await We(a,i,n);let o;o=i||(await Ae.retrieve(e,s)).registry.owner;return x(U,s,r,o)}const pt=async(t,n,s,o,l,f=_,d)=>{if(n.includes(".")||n.trim().toLowerCase()!==n)throw new I(A.InvalidDomain);const[p]=e.findProgramAddressSync([K.toBuffer()],K),w=se(n),y=oe(w,void 0,X),b=se(y.toBase58()),h=oe(b,p),[S]=e.findProgramAddressSync([y.toBuffer()],K),v=$.findIndex((e=>null==d?void 0:d.equals(e)));let k;const B=[];if(-1!==v&&d){k=c(f,d,!0);const e=await t.getAccountInfo(k);if(!(null==e?void 0:e.data)){const e=u(o,k,d,f);B.push(e)}}const W=new g(t,m("mainnet-beta")),E=await W.getData(),R=ee.get(f.toBase58());if(!R)throw new I(A.SymbolNotFound,`No symbol found for mint ${f.toBase58()}`);const D=E.productPrice.get("Crypto."+R+"/USD"),x=E.productFromSymbol.get("Crypto."+R+"/USD"),N=c(f,re),P=new T({name:n,space:s,referrerIdxOpt:-1!=v?v:null}).getInstruction(K,U,X,y,h,r.programId,p,o,l,te,D.productAccountKey,new e(x.price_account),N,a,i,S,k);return B.push(P),[[],B]},wt=async(t,n,a,s,o)=>{let[c]=await e.findProgramAddress([K.toBuffer()],K),u=await Be(t.toBase58()),l=await We(u,c,s);return[[],[new P({name:n}).getInstruction(K,U,X,l,r.programId,c,a,i,s,o)]]},gt=async(e,t,r,i=2e3)=>{const n=[],a=t.split(".")[0];if(!a)throw new I(A.InvalidSubdomain);const{parent:s,pubkey:o}=de(t),c=await e.getMinimumBalanceForRentExemption(i+Ae.HEADER_LEN),u=await ut(e,"\0".concat(a),i,r,r,c,void 0,s);n.push(u);const l=me(t,!0),f=await e.getAccountInfo(l);if(!(null==f?void 0:f.data)){const[,e]=await wt(o,"\0".concat(a),r,s,r);n.push(...e)}return[[],n]},mt=async(e,t,i,n,a,s)=>{ye(i!==Pe.SOL,A.UnsupportedRecord);const{pubkey:o,hashed:c,parent:u}=de(`${i}.${t}`,!0),l=ot(n,i).length,f=await e.getMinimumBalanceForRentExemption(l+Ae.HEADER_LEN);return E(U,r.programId,o,a,s,c,new W(f),new B(l),void 0,u,a)},yt=async(e,t,r,i,n,a)=>{ye(r!==Pe.SOL,A.UnsupportedRecord);const{pubkey:s}=de(`${r}.${t}`,!0),o=await e.getAccountInfo(s);ye(!!(null==o?void 0:o.data),A.AccountDoesNotExist);const c=ot(i,r);if((null==o?void 0:o.data.slice(96).length)!==c.length)return[x(U,s,a,n),await mt(e,t,r,i,n,a)];return[R(U,s,new B(0),c,n)]},bt=async(e,t,i,n,a,s)=>{const{pubkey:o,hashed:c,parent:u}=de(`${Pe.SOL}.${t}`,!0),l=ct(i,o,n,a).length,f=await e.getMinimumBalanceForRentExemption(l+Ae.HEADER_LEN);return[E(U,r.programId,o,n,s,c,new W(f),new B(l),void 0,u,n)]},ht=async(e,t,r,i,n,a)=>{const{pubkey:s}=de(`${Pe.SOL}.${t}`,!0),o=await e.getAccountInfo(s);if(ye(!!(null==o?void 0:o.data),A.AccountDoesNotExist),96!==(null==o?void 0:o.data.length))return[x(U,s,a,i),await bt(e,t,r,i,n,a)];const c=ct(r,s,i,n);return[R(U,s,new B(0),c,i)]},St=(t,i,n)=>{const{pubkey:a}=de(t),[s]=e.findProgramAddressSync([a.toBuffer()],K),[o]=e.findProgramAddressSync([a.toBuffer(),Uint8Array.from([1,1])],K);return(new L).getInstruction(K,U,r.programId,a,me(t),o,s,Z,i,n)},vt=(t,n,s,o,c,u,l,f,d)=>{const[p]=e.findProgramAddressSync([s.toBuffer()],K);return new H({space:n,name:t}).getInstruction(K,U,X,s,o,r.programId,Z,c,u,l,f,d,ne,a,i,p,ae)},kt=async(e,t,r,i,n)=>{const{pubkey:a,isSub:s,parent:o}=de(t);if(!o||!s)throw new I(A.InvalidSubdomain);if(!n){const{registry:t}=await Ae.retrieve(e,a);n=t.owner}let c,u;i&&(c=o,u=(await Ae.retrieve(e,o)).registry.owner);return D(U,a,r,n,void 0,c,u)};async function At(e,t,i,n,a){const s=await Be(t),o=await We(s,void 0,Y),c=await e.getMinimumBalanceForRentExemption(n+Ae.HEADER_LEN);let u=[E(U,r.programId,o,i,a,s,new W(c),new B(n),void 0,Y,V)];return u=u.concat(await Tt(e,t,o,i,a)),u}async function It(e,t,r,i){const n=await Be(e),a=await We(n,void 0,Y);return[R(U,a,new B(r),i,t)]}async function Bt(e,t,r,i,n){const a=await Be(t),s=await We(a,void 0,Y);let o=[D(U,s,i,r,void 0)];const c=await Be(r.toString());return await We(c,V,void 0),o.push(await dt(e,r.toString(),n,V,Y)),o=o.concat(await Tt(e,t,s,i,n)),o}async function Wt(e,t){const r=await Be(e),i=await We(r,void 0,Y),n=await Be(t.toString()),a=await We(n,V,Y);return[x(U,i,t,t),x(U,a,t,t)]}async function Et(e){const t=await Be(e);return await We(t,void 0,Y)}async function Rt(e,t){const r=await Be(t),i=await We(r,void 0,Y),{registry:n}=await Ae.retrieve(e,i);return n}async function Dt(t,r){const i=await Be(r.toString()),n=await We(i,V,Y);let a=await Pt.retrieve(t,n);return[a.twitterHandle,new e(a.twitterRegistryKey)]}async function xt(t,r){const i=[{memcmp:{offset:0,bytes:Y.toBase58()}},{memcmp:{offset:32,bytes:r.toBase58()}},{memcmp:{offset:64,bytes:V.toBase58()}}],n=await t.getProgramAccounts(U,{filters:i});for(const t of n)if(t.account.data.length>Ae.HEADER_LEN+32){let r=t.account.data.slice(Ae.HEADER_LEN),i=p(Pt.schema,Pt,r);return[i.twitterHandle,new e(i.twitterRegistryKey)]}throw new I(A.AccountDoesNotExist)}async function Nt(t,r){const i=[{memcmp:{offset:0,bytes:Y.toBase58()}},{memcmp:{offset:32,bytes:r.toBase58()}},{memcmp:{offset:64,bytes:new e(n.alloc(32,0)).toBase58()}}],a=await t.getProgramAccounts(U,{filters:i});if(a.length>1)throw new I(A.MultipleRegistries);return a[0].account.data.slice(Ae.HEADER_LEN)}class Pt{constructor(e){this.twitterRegistryKey=e.twitterRegistryKey,this.twitterHandle=e.twitterHandle}static async retrieve(e,t){let r=await e.getAccountInfo(t,"processed");if(!r)throw new I(A.InvalidReverseTwitter);return p(this.schema,Pt,r.data.slice(Ae.HEADER_LEN))}}async function Tt(e,t,i,a,s){const o=await Be(a.toString()),c=await We(o,V,Y);let u=f(Pt.schema,new Pt({twitterRegistryKey:i.toBytes(),twitterHandle:t}));return[E(U,r.programId,c,a,s,o,new W(await e.getMinimumBalanceForRentExemption(u.length+Ae.HEADER_LEN)),new B(u.length),V,Y,V),R(U,c,new B(0),n.from(u),V)]}Pt.schema=new Map([[Pt,{kind:"struct",fields:[["twitterRegistryKey",[32]],["twitterHandle","string"]]}]]);const Ht=new e("85iDfUvr3HJyLM2zcq5BXSiDvUWfw6cSE1FfNBo8Ap29");class Lt{constructor(t){this.tag=t.tag,this.nameAccount=new e(t.nameAccount)}static deserialize(e){return d(this.schema,Lt,e)}static async retrieve(e,t){const r=await e.getAccountInfo(t);if(!r||!r.data)throw new I(A.FavouriteDomainNotFound);return this.deserialize(r.data)}static async getKey(t,r){return await e.findProgramAddress([n.from("favourite_domain"),r.toBuffer()],t)}static getKeySync(t,r){return e.findProgramAddressSync([n.from("favourite_domain"),r.toBuffer()],t)}}Lt.schema=new Map([[Lt,{kind:"struct",fields:[["tag","u8"],["nameAccount",[32]]]}]]);const Ct=async(t,r)=>{const[i]=Lt.getKeySync(Ht,new e(r)),n=await Lt.retrieve(t,i),a=await ce(t,n.nameAccount);return{domain:n.nameAccount,reverse:a}};var Mt;!function(e){e.DegenPoet1="DegenPoet#1",e.Rgb0x001="rgb0x00#1"}(Mt||(Mt={}));const jt=new e("ART5dr4bDic2sQVZoFheEmUxwQq5VGSx9he7JxHcXNQD"),Ft=new e("CSWvuDHXExVGEMR9kP8xYAHuNjXogeRck9Cnr312CC9g"),zt=(e,t)=>{const r=se(t),i=se(e),n=oe(i,void 0,ie);return{domainKey:n,bgKey:oe(r,void 0,n)}},Ut=e=>{switch(e){case Mt.DegenPoet1:return jt;case Mt.Rgb0x001:return Ft;default:throw new I(A.InvalidCustomBg)}};export{q as BONFIDA_FIDA_BNB,Q as BONFIDA_USDC_BNB,ie as CUSTOM_BG_TLD,Mt as CustomBg,A as ErrorType,Lt as FavouriteDomain,G as HASH_PREFIX,ae as METAPLEX_ID,Ht as NAME_OFFERS_ID,U as NAME_PROGRAM_ID,Ae as NameRegistryState,B as Numberu32,W as Numberu64,O as PYTH_FIDA_PRICE_ACC,te as PYTH_MAPPING_ACC,Te as RECORD_V1_SIZE,$ as REFERRERS,K as REGISTER_PROGRAM_ID,Z as REVERSE_LOOKUP_CLASS,X as ROOT_DOMAIN_ACCOUNT,Pe as Record,Pt as ReverseTwitterRegistryState,I as SNSError,J as SOL_RECORD_SIG_LEN,ee as TOKENS_SYM_MINT,Y as TWITTER_ROOT_PARENT_REGISTRY_KEY,V as TWITTER_VERIFICATION_AUTHORITY,_ as USDC_MINT,re as VAULT_OWNER,ne as WOLVES_COLLECTION_METADATA,St as burnDomain,L as burnInstruction,It as changeTwitterRegistryData,Bt as changeVerifiedPubkey,ye as check,He as checkSolRecord,E as createInstruction,T as createInstructionV3,ut as createNameRegistry,mt as createRecordInstruction,P as createReverseInstruction,wt as createReverseName,Tt as createReverseTwitterRegistry,bt as createSolRecordInstruction,gt as createSubdomain,N as createV2Instruction,At as createVerifiedTwitterRegistry,H as createWithNftInstruction,x as deleteInstruction,dt as deleteNameRegistry,Wt as deleteTwitterRegistry,st as deserializeRecord,le as findSubdomains,pe as getAllDomains,ge as getAllRegisteredDomains,Ut as getArtistPubkey,ze as getArweaveRecord,at as getBackgroundRecord,nt as getBackpackRecord,rt as getBscRecord,Ge as getBtcRecord,zt as getCustomBgKeys,Ze as getDiscordRecord,Ke as getDogeRecord,xe as getDomainKey,de as getDomainKeySync,we as getDomainKeysWithReverses,Oe as getEmailRecord,Ue as getEthRecord,Ct as getFavoriteDomain,Ve as getGithubRecord,Dt as getHandleAndRegistryKey,Be as getHashedName,se as getHashedNameSync,it as getInjectiveRecord,Fe as getIpfsRecord,Xe as getLtcRecord,We as getNameAccountKey,oe as getNameAccountKeySync,Ie as getNameOwner,_e as getPicRecord,tt as getPointRecord,Me as getRecord,Ce as getRecordKeySync,je as getRecords,Ye as getRedditRecord,Ne as getReverseKey,me as getReverseKeySync,$e as getShdwRecord,et as getSolRecord,Qe as getTelegramRecord,ke as getTokenizedDomains,xt as getTwitterHandleandRegistryKeyViaFilters,Je as getTwitterRecord,Rt as getTwitterRegistry,Nt as getTwitterRegistryData,Et as getTwitterRegistryKey,qe as getUrlRecord,Ee as performReverseLookup,Re as performReverseLookupBatch,C as reallocInstruction,pt as registerDomainName,vt as registerWithNft,Le as resolve,be as retrieveNftOwner,he as retrieveNfts,ce as reverseLookup,ue as reverseLookupBatch,ot as serializeRecord,ct as serializeSolRecord,D as transferInstruction,ft as transferNameOwnership,kt as transferSubdomain,R as updateInstruction,lt as updateNameRegistryData,yt as updateRecordInstruction,ht as updateSolRecordInstruction};
