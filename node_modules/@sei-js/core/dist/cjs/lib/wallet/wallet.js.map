{"version":3,"file":"wallet.js","names":["_protoSigning","require","_crypto","getHdPath","exports","accountIndex","arguments","length","undefined","stringPath","concat","stringToPath","generateWallet","_ref","_asyncToGenerator2","_regenerator","mark","_callee","mnemonicLength","_args","wrap","_callee$","_context","prev","next","DirectSecp256k1HdWallet","generate","prefix","hdPaths","abrupt","sent","stop","apply","restoreWallet","_ref2","_callee2","seedPhrase","_callee2$","_context2","fromMnemonic","_x","_x2"],"sources":["../../../../src/lib/wallet/wallet.ts"],"sourcesContent":["import { DirectSecp256k1HdWallet } from '@cosmjs/proto-signing';\nimport { HdPath, stringToPath } from '@cosmjs/crypto';\n\nexport const getHdPath = (accountIndex = 0): HdPath => {\n\tconst stringPath = `m/44'/118'/0'/0/${accountIndex}`;\n\treturn stringToPath(stringPath);\n};\n\nexport const generateWallet = async (mnemonicLength: 12 | 15 | 18 | 21 | 24 = 12, accountIndex?: number): Promise<DirectSecp256k1HdWallet> => {\n\treturn await DirectSecp256k1HdWallet.generate(mnemonicLength, {\n\t\tprefix: 'sei',\n\t\thdPaths: [getHdPath(accountIndex)]\n\t});\n};\n\nexport const restoreWallet = async (seedPhrase: string, accountIndex?: number): Promise<DirectSecp256k1HdWallet> => {\n\treturn await DirectSecp256k1HdWallet.fromMnemonic(seedPhrase, { prefix: 'sei', hdPaths: [getHdPath(accountIndex)] });\n};\n"],"mappings":";;;;;;;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEO,IAAME,SAAS,GAAAC,OAAA,CAAAD,SAAA,GAAG,SAAZA,SAASA,CAAA,EAAiC;EAAA,IAA7BE,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACzC,IAAMG,UAAU,sBAAAC,MAAA,CAAsBL,YAAY,CAAE;EACpD,OAAO,IAAAM,oBAAY,EAACF,UAAU,CAAC;AAChC,CAAC;AAEM,IAAMG,cAAc,GAAAR,OAAA,CAAAQ,cAAA;EAAA,IAAAC,IAAA,OAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAA;IAAA,IAAAC,cAAA;MAAAb,YAAA;MAAAc,KAAA,GAAAb,SAAA;IAAA,OAAAS,YAAA,YAAAK,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAON,cAAsC,GAAAC,KAAA,CAAAZ,MAAA,QAAAY,KAAA,QAAAX,SAAA,GAAAW,KAAA,MAAG,EAAE;UAAEd,YAAqB,GAAAc,KAAA,CAAAZ,MAAA,OAAAY,KAAA,MAAAX,SAAA;UAAAc,QAAA,CAAAE,IAAA;UAAA,OACzFC,qCAAuB,CAACC,QAAQ,CAACR,cAAc,EAAE;YAC7DS,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE,CAACzB,SAAS,CAACE,YAAY,CAAC;UAClC,CAAC,CAAC;QAAA;UAAA,OAAAiB,QAAA,CAAAO,MAAA,WAAAP,QAAA,CAAAQ,IAAA;QAAA;QAAA;UAAA,OAAAR,QAAA,CAAAS,IAAA;MAAA;IAAA,GAAAd,OAAA;EAAA,CACF;EAAA,gBALYL,cAAcA,CAAA;IAAA,OAAAC,IAAA,CAAAmB,KAAA,OAAA1B,SAAA;EAAA;AAAA,GAK1B;AAEM,IAAM2B,aAAa,GAAA7B,OAAA,CAAA6B,aAAA;EAAA,IAAAC,KAAA,OAAApB,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAmB,SAAOC,UAAkB,EAAE/B,YAAqB;IAAA,OAAAU,YAAA,YAAAK,IAAA,UAAAiB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;QAAA;UAAAc,SAAA,CAAAd,IAAA;UAAA,OAC/DC,qCAAuB,CAACc,YAAY,CAACH,UAAU,EAAE;YAAET,MAAM,EAAE,KAAK;YAAEC,OAAO,EAAE,CAACzB,SAAS,CAACE,YAAY,CAAC;UAAE,CAAC,CAAC;QAAA;UAAA,OAAAiC,SAAA,CAAAT,MAAA,WAAAS,SAAA,CAAAR,IAAA;QAAA;QAAA;UAAA,OAAAQ,SAAA,CAAAP,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CACpH;EAAA,gBAFYF,aAAaA,CAAAO,EAAA,EAAAC,GAAA;IAAA,OAAAP,KAAA,CAAAF,KAAA,OAAA1B,SAAA;EAAA;AAAA,GAEzB"}