{"version":3,"file":"cosmjs.js","names":["_long","_interopRequireDefault","require","_snapWallet","_utils","_utils2","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","defineProperty","requestSignature","exports","_ref","_asyncToGenerator2","_regenerator","mark","_callee","chainId","signerAddress","signDoc","snapId","signature","accountNumber","modifiedAccountNumber","wrap","_callee$","_context","prev","next","sendReqToSnap","sent","Long","low","high","unsigned","abrupt","signed","concat","toString","authInfoBytes","Uint8Array","values","bodyBytes","stop","_x","_x2","_x3","_x4","CosmJSOfflineSigner","accountIndex","_classCallCheck2","_createClass2","key","value","_getAccounts","_callee2","wallet","_callee2$","_context2","getWallet","getAccounts","_signDirect","_callee3","accounts","_callee3$","_context3","Error","find","account","address","signDirect","_x5","_x6","_signAmino","_callee4","options","_callee4$","_context4","chain_id","requestSignAmino","signAmino","_x7","_x8","_x9","_signArbitrary","_callee5","signer","data","signOptions","result","_callee5$","_context5","makeADR36AminoSignDoc","isADR36","enableExtraEntropy","signArbitrary","_x10","_x11","_x12","_ref2","_callee6","_ref3","_ref3$isADR","_ref3$enableExtraEntr","_callee6$","_context6","_x13","_x14","_x15","_x16","_x17"],"sources":["../../../../src/lib/metamask-snap/cosmjs.ts"],"sourcesContent":["import { SignDoc } from 'cosmjs-types/cosmos/tx/v1beta1/tx';\nimport { AccountData, AminoSignResponse, StdSignDoc } from '@cosmjs/amino';\nimport { DirectSignResponse, OfflineDirectSigner } from '@cosmjs/proto-signing';\nimport Long from 'long';\nimport { SignAminoOptions } from './types';\nimport { getWallet } from './snapWallet';\nimport { sendReqToSnap } from './utils';\nimport { makeADR36AminoSignDoc } from '../utils';\n\nexport const requestSignature = async (\n\tchainId: string,\n\tsignerAddress: string,\n\tsignDoc: {\n\t\tbodyBytes?: Uint8Array | null;\n\t\tauthInfoBytes?: Uint8Array | null;\n\t\tchainId?: string | null;\n\t\taccountNumber?: Long | null;\n\t},\n\tsnapId: string\n): Promise<DirectSignResponse> => {\n\tconst signature = await sendReqToSnap(\n\t\t'signDirect',\n\t\t{\n\t\t\tchainId,\n\t\t\tsignerAddress,\n\t\t\tsignDoc\n\t\t},\n\t\tsnapId\n\t);\n\n\tconst { accountNumber } = signDoc;\n\n\tconst modifiedAccountNumber = new Long(accountNumber?.low || 0, accountNumber?.high, accountNumber?.unsigned);\n\n\treturn {\n\t\tsignature: signature.signature,\n\t\tsigned: {\n\t\t\t...signature.signed,\n\t\t\taccountNumber: `${modifiedAccountNumber.toString()}`,\n\t\t\tauthInfoBytes: new Uint8Array(Object.values(signature.signed.authInfoBytes)),\n\t\t\tbodyBytes: new Uint8Array(Object.values(signature.signed.bodyBytes))\n\t\t}\n\t};\n};\n\nexport class CosmJSOfflineSigner implements OfflineDirectSigner {\n\treadonly chainId: string;\n\treadonly snapId: string;\n\treadonly accountIndex: number;\n\n\tconstructor(chainId: string, snapId: string, accountIndex?: number) {\n\t\tthis.chainId = chainId;\n\t\tthis.snapId = snapId;\n\t\tthis.accountIndex = accountIndex || 0;\n\t}\n\n\tasync getAccounts(): Promise<AccountData[]> {\n\t\tconst wallet = await getWallet(this.accountIndex, this.snapId);\n\t\treturn wallet.getAccounts();\n\t}\n\n\tasync signDirect(signerAddress: string, signDoc: SignDoc): Promise<DirectSignResponse> {\n\t\tif (this.chainId !== signDoc.chainId) {\n\t\t\tthrow new Error('Chain ID does not match signer chain ID');\n\t\t}\n\t\tconst accounts = await this.getAccounts();\n\n\t\tif (accounts.find((account) => account.address !== signerAddress)) {\n\t\t\tthrow new Error('Signer address does not match wallet address');\n\t\t}\n\n\t\treturn requestSignature(this.chainId, signerAddress, signDoc, this.snapId);\n\t}\n\n\tasync signAmino(signerAddress: string, signDoc: StdSignDoc, options?: SignAminoOptions): Promise<AminoSignResponse> {\n\t\tif (this.chainId !== signDoc.chain_id) {\n\t\t\tthrow new Error('Chain ID does not match signer chain ID');\n\t\t}\n\t\tconst accounts = await this.getAccounts();\n\n\t\tif (accounts.find((account) => account.address !== signerAddress)) {\n\t\t\tthrow new Error('Signer address does not match wallet address');\n\t\t}\n\n\t\treturn requestSignAmino(this.chainId, signerAddress, signDoc, this.snapId, options);\n\t}\n\n\tasync signArbitrary(signer: string, data: string, signOptions?: { enableExtraEntropy?: boolean }) {\n\t\tconst signDoc = makeADR36AminoSignDoc(signer, data);\n\t\tconst result = await requestSignAmino(this.chainId, signer, signDoc, this.snapId, {\n\t\t\tisADR36: true,\n\t\t\tenableExtraEntropy: signOptions?.enableExtraEntropy\n\t\t});\n\t\treturn result.signature;\n\t}\n}\n\nexport const requestSignAmino = async (\n\tchainId: string,\n\tsignerAddress: string,\n\tsignDoc: StdSignDoc,\n\tsnapId: string,\n\toptions?: SignAminoOptions\n): Promise<AminoSignResponse> => {\n\tconst { isADR36 = false, enableExtraEntropy = false } = options || {};\n\n\tif (!isADR36 && chainId !== signDoc.chain_id) {\n\t\tthrow new Error('Chain ID does not match signer chain ID');\n\t}\n\n\treturn (await sendReqToSnap(\n\t\t'signAmino',\n\t\t{\n\t\t\tchainId,\n\t\t\tsignerAddress,\n\t\t\tsignDoc,\n\t\t\tisADR36,\n\t\t\tenableExtraEntropy\n\t\t},\n\t\tsnapId\n\t)) as AminoSignResponse;\n};\n"],"mappings":"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"}