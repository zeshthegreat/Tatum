import { MsgBase } from '../../MsgBase';
import { InjectivePermissionsV1Beta1Tx } from '@injectivelabs/core-proto-ts';
export declare namespace MsgDeleteNamespace {
    interface Params {
        sender: string;
        namespaceDenom: string;
    }
    type Proto = InjectivePermissionsV1Beta1Tx.MsgDeleteNamespace;
}
/**
 * @category Messages
 */
export default class MsgDeleteNamespace extends MsgBase<MsgDeleteNamespace.Params, MsgDeleteNamespace.Proto> {
    static fromJSON(params: MsgDeleteNamespace.Params): MsgDeleteNamespace;
    toProto(): InjectivePermissionsV1Beta1Tx.MsgDeleteNamespace;
    toData(): {
        sender: string;
        namespaceDenom: string;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            namespace_denom: string;
        };
    };
    toWeb3(): {
        sender: string;
        namespace_denom: string;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: InjectivePermissionsV1Beta1Tx.MsgDeleteNamespace;
    };
    toBinary(): Uint8Array;
}
//# sourceMappingURL=MsgDeleteNamespace.d.ts.map