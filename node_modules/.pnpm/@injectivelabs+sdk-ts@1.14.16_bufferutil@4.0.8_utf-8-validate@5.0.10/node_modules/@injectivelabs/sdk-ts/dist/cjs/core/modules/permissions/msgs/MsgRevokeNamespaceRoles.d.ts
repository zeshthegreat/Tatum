import { MsgBase } from '../../MsgBase';
import { InjectivePermissionsV1Beta1Tx } from '@injectivelabs/core-proto-ts';
export declare namespace MsgRevokeNamespaceRoles {
    interface Params {
        sender: string;
        namespaceDenom: string;
        addressRolesToRevoke: {
            address: string;
            roles: string[];
        }[];
    }
    type Proto = InjectivePermissionsV1Beta1Tx.MsgRevokeNamespaceRoles;
}
/**
 * @category Messages
 */
export default class MsgRevokeNamespaceRoles extends MsgBase<MsgRevokeNamespaceRoles.Params, MsgRevokeNamespaceRoles.Proto> {
    static fromJSON(params: MsgRevokeNamespaceRoles.Params): MsgRevokeNamespaceRoles;
    toProto(): InjectivePermissionsV1Beta1Tx.MsgRevokeNamespaceRoles;
    toData(): {
        sender: string;
        namespaceDenom: string;
        addressRolesToRevoke: import("@injectivelabs/core-proto-ts/cjs/injective/permissions/v1beta1/permissions").AddressRoles[];
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            namespace_denom: string;
            address_roles_to_revoke: import("@injectivelabs/core-proto-ts/cjs/injective/permissions/v1beta1/permissions").AddressRoles[];
        };
    };
    toWeb3(): {
        sender: string;
        namespace_denom: string;
        address_roles_to_revoke: import("@injectivelabs/core-proto-ts/cjs/injective/permissions/v1beta1/permissions").AddressRoles[];
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: InjectivePermissionsV1Beta1Tx.MsgRevokeNamespaceRoles;
    };
    toBinary(): Uint8Array;
}
//# sourceMappingURL=MsgRevokeNamespaceRoles.d.ts.map