"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAsn1Signature = parseAsn1Signature;
exports.parseCredentialPublicKey = parseCredentialPublicKey;
const p256_1 = require("@noble/curves/p256");
const Hex = require("../Hex.js");
const PublicKey = require("../PublicKey.js");
function parseAsn1Signature(bytes) {
    const r_start = bytes[4] === 0 ? 5 : 4;
    const r_end = r_start + 32;
    const s_start = bytes[r_end + 2] === 0 ? r_end + 3 : r_end + 2;
    const r = BigInt(Hex.fromBytes(bytes.slice(r_start, r_end)));
    const s = BigInt(Hex.fromBytes(bytes.slice(s_start)));
    return {
        r,
        s: s > p256_1.p256.CURVE.n / 2n ? p256_1.p256.CURVE.n - s : s,
    };
}
async function parseCredentialPublicKey(cPublicKey) {
    const cryptoKey = await crypto.subtle.importKey('spki', new Uint8Array(cPublicKey), {
        name: 'ECDSA',
        namedCurve: 'P-256',
        hash: 'SHA-256',
    }, true, ['verify']);
    const publicKey = new Uint8Array(await crypto.subtle.exportKey('raw', cryptoKey));
    return PublicKey.from(publicKey);
}
//# sourceMappingURL=webauthn.js.map