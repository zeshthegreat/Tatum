"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createLCDClient = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _lcd = require("@osmonauts/lcd");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var createLCDClient = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(_ref) {
    var restEndpoint, requestClient;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          restEndpoint = _ref.restEndpoint;
          requestClient = new _lcd.LCDClient({
            restEndpoint: restEndpoint
          });
          _context.next = 4;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/auth/v1beta1/query.lcd"));
          });
        case 4:
          _context.t0 = _context.sent.LCDQueryClient;
          _context.t1 = {
            requestClient: requestClient
          };
          _context.t2 = new _context.t0(_context.t1);
          _context.t3 = {
            v1beta1: _context.t2
          };
          _context.next = 10;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/authz/v1beta1/query.lcd"));
          });
        case 10:
          _context.t4 = _context.sent.LCDQueryClient;
          _context.t5 = {
            requestClient: requestClient
          };
          _context.t6 = new _context.t4(_context.t5);
          _context.t7 = {
            v1beta1: _context.t6
          };
          _context.next = 16;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/bank/v1beta1/query.lcd"));
          });
        case 16:
          _context.t8 = _context.sent.LCDQueryClient;
          _context.t9 = {
            requestClient: requestClient
          };
          _context.t10 = new _context.t8(_context.t9);
          _context.t11 = {
            v1beta1: _context.t10
          };
          _context.next = 22;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/distribution/v1beta1/query.lcd"));
          });
        case 22:
          _context.t12 = _context.sent.LCDQueryClient;
          _context.t13 = {
            requestClient: requestClient
          };
          _context.t14 = new _context.t12(_context.t13);
          _context.t15 = {
            v1beta1: _context.t14
          };
          _context.next = 28;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/gov/v1beta1/query.lcd"));
          });
        case 28:
          _context.t16 = _context.sent.LCDQueryClient;
          _context.t17 = {
            requestClient: requestClient
          };
          _context.t18 = new _context.t16(_context.t17);
          _context.t19 = {
            v1beta1: _context.t18
          };
          _context.next = 34;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/staking/v1beta1/query.lcd"));
          });
        case 34:
          _context.t20 = _context.sent.LCDQueryClient;
          _context.t21 = {
            requestClient: requestClient
          };
          _context.t22 = new _context.t20(_context.t21);
          _context.t23 = {
            v1beta1: _context.t22
          };
          _context.next = 40;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/tx/v1beta1/service.lcd"));
          });
        case 40:
          _context.t24 = _context.sent.LCDQueryClient;
          _context.t25 = {
            requestClient: requestClient
          };
          _context.t26 = new _context.t24(_context.t25);
          _context.t27 = {
            v1beta1: _context.t26
          };
          _context.next = 46;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("../cosmos/upgrade/v1beta1/query.lcd"));
          });
        case 46:
          _context.t28 = _context.sent.LCDQueryClient;
          _context.t29 = {
            requestClient: requestClient
          };
          _context.t30 = new _context.t28(_context.t29);
          _context.t31 = {
            v1beta1: _context.t30
          };
          _context.t32 = {
            auth: _context.t3,
            authz: _context.t7,
            bank: _context.t11,
            distribution: _context.t15,
            gov: _context.t19,
            staking: _context.t23,
            tx: _context.t27,
            upgrade: _context.t31
          };
          _context.next = 53;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("./seichain/dex/query.lcd"));
          });
        case 53:
          _context.t33 = _context.sent.LCDQueryClient;
          _context.t34 = {
            requestClient: requestClient
          };
          _context.t35 = new _context.t33(_context.t34);
          _context.next = 58;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("./seichain/epoch/query.lcd"));
          });
        case 58:
          _context.t36 = _context.sent.LCDQueryClient;
          _context.t37 = {
            requestClient: requestClient
          };
          _context.t38 = new _context.t36(_context.t37);
          _context.next = 63;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("./seichain/mint/v1beta1/query.lcd"));
          });
        case 63:
          _context.t39 = _context.sent.LCDQueryClient;
          _context.t40 = {
            requestClient: requestClient
          };
          _context.t41 = new _context.t39(_context.t40);
          _context.next = 68;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("./seichain/oracle/query.lcd"));
          });
        case 68:
          _context.t42 = _context.sent.LCDQueryClient;
          _context.t43 = {
            requestClient: requestClient
          };
          _context.t44 = new _context.t42(_context.t43);
          _context.next = 73;
          return Promise.resolve().then(function () {
            return _interopRequireWildcard(require("./seichain/tokenfactory/query.lcd"));
          });
        case 73:
          _context.t45 = _context.sent.LCDQueryClient;
          _context.t46 = {
            requestClient: requestClient
          };
          _context.t47 = new _context.t45(_context.t46);
          _context.t48 = {
            dex: _context.t35,
            epoch: _context.t38,
            mint: _context.t41,
            oracle: _context.t44,
            tokenfactory: _context.t47
          };
          _context.t49 = {
            seichain: _context.t48
          };
          return _context.abrupt("return", {
            cosmos: _context.t32,
            seiprotocol: _context.t49
          });
        case 79:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return function createLCDClient(_x) {
    return _ref2.apply(this, arguments);
  };
}();
exports.createLCDClient = createLCDClient;