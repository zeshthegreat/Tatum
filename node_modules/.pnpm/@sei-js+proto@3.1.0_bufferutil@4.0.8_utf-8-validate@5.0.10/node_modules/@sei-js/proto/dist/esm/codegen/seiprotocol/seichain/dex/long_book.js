import { OrderEntry } from "./order_entry";
import * as _m0 from "protobufjs/minimal";
function createBaseLongBook() {
  return {
    price: "",
    entry: OrderEntry.fromPartial({})
  };
}
export const LongBook = {
  encode(message, writer = _m0.Writer.create()) {
    if (message.price !== "") {
      writer.uint32(10).string(message.price);
    }
    if (message.entry !== undefined) {
      OrderEntry.encode(message.entry, writer.uint32(18).fork()).ldelim();
    }
    return writer;
  },
  decode(input, length) {
    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseLongBook();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.price = reader.string();
          break;
        case 2:
          message.entry = OrderEntry.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  },
  fromPartial(object) {
    var _object$price;
    const message = createBaseLongBook();
    message.price = (_object$price = object.price) !== null && _object$price !== void 0 ? _object$price : "";
    message.entry = object.entry !== undefined && object.entry !== null ? OrderEntry.fromPartial(object.entry) : undefined;
    return message;
  }
};