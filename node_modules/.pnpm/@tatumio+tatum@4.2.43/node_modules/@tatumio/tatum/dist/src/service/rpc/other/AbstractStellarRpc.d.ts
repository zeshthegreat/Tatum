import { GetI } from '../../../dto/GetI';
import { PostI } from '../../../dto/PostI';
import { Account, Asset, BaseParams, ClaimableBalance, Effect, FeeStats, GetAccountDataParams, GetAccountEffectsParams, GetAccountParams, GetAccountPaymentsParams, GetAccountTradesParams, GetAccountTransactionsParams, GetAccountsParams, GetAssetsParams, GetClaimableBalanceParams, GetClaimableBalancesParams, GetClaimableOperationsParams, GetClaimableTransactionsParams, GetEffectsParams, GetLedgerEffectsParams, GetLedgerOperationsParams, GetLedgerParams, GetLedgerPaymentsParams, GetLedgerTransactionsParams, GetLiquidityPoolEffectsParams, GetLiquidityPoolOperationsParams, GetLiquidityPoolParams, GetLiquidityPoolTradesParams, GetLiquidityPoolTransactionsParams, GetLiquidityPoolsParams, GetOfferParams, GetOfferTradesParams, GetOffersByAccountIdParams, GetOffersParams, GetOperationEffectsParams, GetOperationParams, GetOperationsByAccountIdParams, GetOperationsParams, GetOrderBookParams, GetPaymentsParams, GetStrictReceivePaymentPathsParams, GetStrictSendPaymentPathsParams, GetTradeAggregationsParams, GetTradesParams, GetTransactionEffectsParams, GetTransactionOperationsParams, GetTransactionParams, GetTransactionsParams, Ledger, Links, LiquidityPools, Offer, OfferResponse, Operation, OperationResponse, Order, Path, Payment, RecordClaimableBalance, RecordLiquidityPool, StellarRpcSuite, SubmitTransaction, SubmitTransactionParams, Trade, TradeAggregation, Transaction } from '../../../dto/rpc/StellarRpcSuite';
export declare abstract class AbstractStellarRpc implements StellarRpcSuite {
    protected abstract get<T>(post: GetI): Promise<T>;
    protected abstract post<T>(post: PostI): Promise<T>;
    private sendGet;
    private sendPost;
    getAccounts(params?: GetAccountsParams): Promise<Links & Account>;
    getAccount(params: GetAccountParams): Promise<Links & Account>;
    getAccountTransactions(params: GetAccountTransactionsParams): Promise<Transaction>;
    getAccountOperations(params: GetOperationsByAccountIdParams): Promise<OperationResponse>;
    getAccountPayments(params: GetAccountPaymentsParams): Promise<Links & Payment>;
    getAccountEffects(params: GetAccountEffectsParams): Promise<Effect>;
    getAccountOffers(params: GetOffersByAccountIdParams): Promise<OfferResponse>;
    getAccountTrades(params: GetAccountTradesParams): Promise<Trade>;
    getAccountData(params: GetAccountDataParams): Promise<{
        value: string;
    }>;
    getAssets(params?: GetAssetsParams): Promise<Links & Asset>;
    getClaimableBalances(params?: GetClaimableBalancesParams): Promise<ClaimableBalance>;
    getClaimableBalance(params: GetClaimableBalanceParams): Promise<RecordClaimableBalance>;
    getClaimableTransactions(params: GetClaimableTransactionsParams): Promise<Transaction>;
    getClaimableOperations(params: GetClaimableOperationsParams): Promise<Links & OperationResponse>;
    getEffects(params?: GetEffectsParams): Promise<Effect>;
    getFeeStats(): Promise<FeeStats>;
    getLiquidityPools(params?: GetLiquidityPoolsParams): Promise<LiquidityPools>;
    getLiquidityPool(params: GetLiquidityPoolParams): Promise<RecordLiquidityPool>;
    getLiquidityPoolEffects(params: GetLiquidityPoolEffectsParams): Promise<Effect>;
    getLiquidityPoolTrades(params: GetLiquidityPoolTradesParams): Promise<Trade>;
    getLiquidityPoolTransactions(params: GetLiquidityPoolTransactionsParams): Promise<Transaction>;
    getLiquidityPoolOperations(params: GetLiquidityPoolOperationsParams): Promise<Operation>;
    getLedger(params: GetLedgerParams): Promise<Ledger>;
    getLedgerTransactions(params: GetLedgerTransactionsParams): Promise<Transaction>;
    getLedgerPayments(params: GetLedgerPaymentsParams): Promise<Links & Payment>;
    getLedgerOperations(params: GetLedgerOperationsParams): Promise<Operation>;
    getLedgerEffects(params: GetLedgerEffectsParams): Promise<(Links & Effect)[]>;
    getLedgers(params?: BaseParams): Promise<Ledger>;
    getOffers(params?: GetOffersParams): Promise<Offer>;
    getOffer(params: GetOfferParams): Promise<Ledger>;
    getOfferTrades(params: GetOfferTradesParams): Promise<Trade>;
    getOrderBook(params: GetOrderBookParams): Promise<Order>;
    getTradeAggregations(params: GetTradeAggregationsParams): Promise<TradeAggregation>;
    getTrades(params?: GetTradesParams): Promise<Links & Trade>;
    getTransaction(params: GetTransactionParams): Promise<Transaction>;
    getTransactionOperations(params: GetTransactionOperationsParams): Promise<Operation>;
    getTransactionEffects(params: GetTransactionEffectsParams): Promise<Links & Effect>;
    getTransactions(params?: GetTransactionsParams): Promise<Links & Transaction>;
    getOperation(params: GetOperationParams): Promise<Operation>;
    getOperationEffects(params: GetOperationEffectsParams): Promise<Links & Effect>;
    getOperations(params?: GetOperationsParams): Promise<Operation>;
    getPayments(params?: GetPaymentsParams): Promise<Links & OperationResponse>;
    getStrictReceivePaymentPaths(params: GetStrictReceivePaymentPathsParams): Promise<Path>;
    getStrictSendPaymentPaths(params: GetStrictSendPaymentPathsParams): Promise<Path>;
    submitTransaction(params: SubmitTransactionParams): Promise<SubmitTransaction>;
}
