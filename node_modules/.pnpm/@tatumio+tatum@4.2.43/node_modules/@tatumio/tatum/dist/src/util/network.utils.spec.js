"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dto_1 = require("../dto");
const network_utils_1 = require("./network.utils");
describe('Network Utils', () => {
    describe('getChainId', () => {
        it.each([
            [dto_1.Network.ETHEREUM, 1],
            [dto_1.Network.ETHEREUM_SEPOLIA, 11155111],
            [dto_1.Network.CELO, 42220],
            [dto_1.Network.CELO_ALFAJORES, 44787],
        ])('valid %s -> %s', (network, expected) => {
            expect(network_utils_1.NetworkUtils.getChainId(network)).toBe(expected);
        });
    });
    describe('isTestnet', () => {
        it.each([
            [dto_1.Network.ETHEREUM, false],
            [dto_1.Network.ETHEREUM_SEPOLIA, true],
            [dto_1.Network.CELO, false],
            [dto_1.Network.CELO_ALFAJORES, true],
        ])('valid %s -> %s', (network, expected) => {
            expect(network_utils_1.NetworkUtils.isTestnet(network)).toBe(expected);
        });
    });
    describe('isAlternateTestnet', () => {
        it.each([
            [dto_1.Network.ETHEREUM, false],
            [dto_1.Network.ETHEREUM_SEPOLIA, false],
            [dto_1.Network.ETHEREUM_HOLESKY, true],
            [dto_1.Network.CELO, false],
            [dto_1.Network.CELO_ALFAJORES, false],
        ])('valid %s -> %s', (network, expected) => {
            expect(network_utils_1.NetworkUtils.isAlternateTestnet(network)).toBe(expected);
        });
    });
});
//# sourceMappingURL=network.utils.spec.js.map