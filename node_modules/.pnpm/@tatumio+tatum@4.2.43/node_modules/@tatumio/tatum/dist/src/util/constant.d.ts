import { Chain, Network } from '../dto';
export declare const Constant: {
    TATUM_API_URL: {
        V3: string;
        V4: string;
    };
    NETWORK: {
        ChainMapInverse: {
            ETH: Chain;
            SOL: Chain;
            MATIC: Chain;
            CELO: Chain;
            KLAY: Chain;
            BTC: Chain;
            LTC: Chain;
            BCH: Chain;
            DOGE: Chain;
            TRON: Chain;
            BSC: Chain;
            FLR: Chain;
        };
    };
    DECIMALS: {
        "bitcoin-mainnet": number;
        "bitcoin-testnet": number;
        "egld-mainnet": number;
        "egld-testnet": number;
        "near-mainnet": number;
        "near-testnet": number;
        "bitcoin-cash-mainnet": number;
        "bch-mainnet-rostrum": number;
        "bch-testnet": number;
        "litecoin-mainnet": number;
        "litecoin-testnet": number;
        "doge-mainnet": number;
        "doge-testnet": number;
        "zcash-mainnet": number;
        "zcash-testnet": number;
        "ethereum-mainnet": number;
        "ethereum-sepolia": number;
        "ethereum-holesky": number;
        "polygon-mainnet": number;
        "polygon-amoy": number;
        "celo-mainnet": number;
        "celo-testnet": number;
        "solana-mainnet": number;
        "solana-devnet": number;
        "ripple-mainnet": number;
        "ripple-testnet": number;
        "klaytn-mainnet": number;
        "klaytn-baobab": number;
        "tron-mainnet": number;
        "tron-testnet": number;
        "bsc-mainnet": number;
        "bsc-testnet": number;
        "avalanche-c-mainnet": number;
        "avax-testnet": number;
        "avax-p-mainnet": number;
        "avax-p-testnet": number;
        "avax-x-mainnet": number;
        "avax-x-testnet": number;
        "fantom-mainnet": number;
        "fantom-testnet": number;
        "one-mainnet-s0": number;
        "one-testnet-s0": number;
        "algorand-mainnet-algod": number;
        "algorand-testnet-algod": number;
        "algorand-mainnet-indexer": number;
        "algorand-testnet-indexer": number;
        "arbitrum-one-mainnet": number;
        "arb-testnet": number;
        "arb-nova-mainnet": number;
        "aurora-mainnet": number;
        "aurora-testnet": number;
        "cardano-mainnet": number;
        "cardano-preprod": number;
        "gno-mainnet": number;
        "gno-testnet": number;
        "flow-mainnet": number;
        "flow-testnet": number;
        "cronos-mainnet": number;
        "cro-testnet": number;
        "kcs-mainnet": number;
        "kcs-testnet": number;
        "ethereum-classic-mainnet": number;
        "eos-mainnet": number;
        "eon-mainnet": number;
        "horizen-eon-gobi": number;
        "eos-testnet": number;
        "tezos-mainnet": number;
        "tezos-testnet": number;
        "stellar-mainnet": number;
        "stellar-testnet": number;
        "oasis-mainnet": number;
        "oasis-testnet": number;
        "optimism-mainnet": number;
        "optimism-testnet": number;
        "palm-mainnet": number;
        "palm-testnet": number;
        "dot-mainnet": number;
        "dot-testnet": number;
        "rsk-mainnet": number;
        "rsk-testnet": number;
        "vechain-mainnet": number;
        "vechain-testnet": number;
        "xinfin-mainnet": number;
        "xdc-testnet": number;
        "zilliqa-mainnet": number;
        "zilliqa-testnet": number;
        "flare-mainnet": number;
        "flare-coston": number;
        "flare-coston2": number;
        "flare-songbird": number;
        "haqq-mainnet": number;
        "haqq-testnet": number;
        "chiliz-mainnet": number;
        "bnb-beacon-chain-mainnet": number;
        "base-mainnet": number;
        "base-sepolia": number;
        "kadena-mainnet": number;
        "kadena-testnet": number;
        "cosmos-mainnet": number;
        "iota-mainnet": number;
        "iota-testnet": number;
        "bitcoin-mainnet-electrs": number;
        "bitcoin-testnet-electrs": number;
        "bch-testnet-rostrum": number;
        "casper-mainnet": number;
        "ton-mainnet": number;
        "ton-testnet": number;
        "zksync-mainnet": number;
        "zksync-testnet": number;
    };
    CURRENCY_NAMES: {
        "bitcoin-mainnet": string;
        "bitcoin-testnet": string;
        "near-mainnet": string;
        "near-testnet": string;
        "egld-mainnet": string;
        "egld-testnet": string;
        "bitcoin-cash-mainnet": string;
        "bch-testnet": string;
        "litecoin-mainnet": string;
        "litecoin-testnet": string;
        "doge-mainnet": string;
        "doge-testnet": string;
        "zcash-mainnet": string;
        "zcash-testnet": string;
        "ethereum-mainnet": string;
        "ethereum-sepolia": string;
        "ethereum-holesky": string;
        "polygon-mainnet": string;
        "polygon-amoy": string;
        "celo-mainnet": string;
        "celo-testnet": string;
        "solana-mainnet": string;
        "solana-devnet": string;
        "ripple-mainnet": string;
        "ripple-testnet": string;
        "klaytn-mainnet": string;
        "klaytn-baobab": string;
        "tron-mainnet": string;
        "tron-testnet": string;
        "bsc-mainnet": string;
        "bsc-testnet": string;
        "avalanche-c-mainnet": string;
        "avax-testnet": string;
        "avax-p-mainnet": string;
        "avax-p-testnet": string;
        "avax-x-mainnet": string;
        "avax-x-testnet": string;
        "fantom-mainnet": string;
        "fantom-testnet": string;
        "one-mainnet-s0": string;
        "one-testnet-s0": string;
        "algorand-mainnet-algod": string;
        "algorand-testnet-algod": string;
        "algorand-mainnet-indexer": string;
        "algorand-testnet-indexer": string;
        "arbitrum-one-mainnet": string;
        "arb-testnet": string;
        "arb-nova-mainnet": string;
        "aurora-mainnet": string;
        "aurora-testnet": string;
        "cardano-mainnet": string;
        "cardano-preprod": string;
        "gno-mainnet": string;
        "gno-testnet": string;
        "flow-mainnet": string;
        "flare-mainnet": string;
        "flare-coston": string;
        "flare-coston2": string;
        "flare-songbird": string;
        "flow-testnet": string;
        "cronos-mainnet": string;
        "cro-testnet": string;
        "kcs-mainnet": string;
        "kcs-testnet": string;
        "ethereum-classic-mainnet": string;
        "eos-mainnet": string;
        "eon-mainnet": string;
        "horizen-eon-gobi": string;
        "eos-testnet": string;
        "tezos-mainnet": string;
        "tezos-testnet": string;
        "stellar-mainnet": string;
        "stellar-testnet": string;
        "oasis-mainnet": string;
        "oasis-testnet": string;
        "optimism-mainnet": string;
        "optimism-testnet": string;
        "palm-mainnet": string;
        "palm-testnet": string;
        "dot-mainnet": string;
        "dot-testnet": string;
        "rsk-mainnet": string;
        "rsk-testnet": string;
        "vechain-mainnet": string;
        "vechain-testnet": string;
        "xinfin-mainnet": string;
        "xdc-testnet": string;
        "zilliqa-mainnet": string;
        "zilliqa-testnet": string;
        "haqq-mainnet": string;
        "haqq-testnet": string;
        "chiliz-mainnet": string;
        "bnb-beacon-chain-mainnet": string;
        "base-mainnet": string;
        "base-sepolia": string;
        "kadena-mainnet": string;
        "kadena-testnet": string;
        "bch-mainnet-rostrum": string;
        "cosmos-mainnet": string;
        "iota-mainnet": string;
        "iota-testnet": string;
        "bitcoin-mainnet-electrs": string;
        "bitcoin-testnet-electrs": string;
        "bch-testnet-rostrum": string;
        "casper-mainnet": string;
        "ton-mainnet": string;
        "ton-testnet": string;
        "zksync-mainnet": string;
        "zksync-testnet": string;
    };
    RPC: {
        MAINNETS: Network[];
        TESTNETS: Network[];
        METHOD_PREFIX: string;
    };
    OPEN_RPC: {
        LB_INTERVAL: number;
        ALLOWED_BLOCKS_BEHIND: number;
    };
    TRON_SHASTA_BASE_URL: {
        BASE: string;
        RPC: string;
    };
    EOS_PREFIX: string;
    BEACON_PREFIX: string;
    BEACON_BASE_PREFIX: string;
};
