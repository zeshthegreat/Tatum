"use strict";require("../node_modules/buffer/index.cjs");var e=require("../node_modules/bs58/index.cjs"),r=require("@solana/web3.js"),o=require("../node_modules/@scure/base/lib/esm/index.cjs"),c=require("../node_modules/punycode/punycode.es6.cjs"),i=require("../node_modules/ipaddr.js/lib/ipaddr.cjs"),d=require("../types/record.cjs"),t=require("../error.cjs"),n=require("./checkSolRecord.cjs"),s=require("../_virtual/index.cjs");exports.deserializeRecord=(u,l,f)=>{const a=null==u?void 0:u.data;if(!a)return;if(0===a.compare(s.__exports.Buffer.alloc(a.length)))return;const R=d.RECORD_V1_SIZE.get(l),x=(e=>{const r=Array.from(e);return r.length-1-r.reverse().findIndex((e=>0!==e))+1})(a);if(!R){const e=a.slice(0,x).toString("utf-8");return l===d.Record.CNAME||l===d.Record.TXT?c.decode(e):e}if(l===d.Record.SOL){const r=new TextEncoder,o=s.__exports.Buffer.concat([a.slice(0,32),f.toBuffer()]),c=r.encode(o.toString("hex"));if(n.checkSolRecord(c,a.slice(32,96),u.owner))return e.bs58.encode(a.slice(0,32))}if(R&&x!==R){const e=a.slice(0,x).toString("utf-8");if(l===d.Record.Injective){const r=o.bech32.decodeToBytes(e);if("inj"===r.prefix&&20===r.bytes.length)return e}else if(l===d.Record.BSC||l===d.Record.ETH){const r=e.slice(0,2),o=e.slice(2);if("0x"===r&&20===s.__exports.Buffer.from(o,"hex").length)return e}else if((l===d.Record.A||l===d.Record.AAAA)&&i.ipaddrExports.isValid(e))return e;throw new t.InvalidRecordDataError("The record data is malformed")}if(l===d.Record.ETH||l===d.Record.BSC)return"0x"+a.slice(0,R).toString("hex");if(l===d.Record.Injective)return o.bech32.encode("inj",o.bech32.toWords(a.slice(0,R)));if(l===d.Record.A||l===d.Record.AAAA)return i.ipaddrExports.fromByteArray([...a.slice(0,R)]).toString();if(l===d.Record.Background)return new r.PublicKey(a.slice(0,R)).toString();throw new t.InvalidRecordDataError("The record data is malformed")};
//# sourceMappingURL=deserializeRecord.cjs.map
