"use strict";require("./node_modules/buffer/index.cjs");var e=require("./node_modules/borsh/lib/esm/index.cjs"),t=require("@solana/web3.js"),r=require("./utils/deserializeReverse.cjs"),a=require("./utils/getReverseKeyFromDomainKey.cjs"),i=require("./utils/reverseLookup.cjs"),s=require("./error.cjs"),o=require("./nft/getDomainMint.cjs"),n=require("./state.cjs"),u=require("./constants.cjs"),c=require("./_virtual/index.cjs"),l=require("./node_modules/@solana/spl-token/lib/esm/state/mint.cjs"),d=require("./node_modules/@solana/spl-token/lib/esm/state/account.cjs");const m=new t.PublicKey("85iDfUvr3HJyLM2zcq5BXSiDvUWfw6cSE1FfNBo8Ap29");class f{constructor(e){this.tag=e.tag,this.nameAccount=new t.PublicKey(e.nameAccount)}static deserialize(t){return new f(e.deserialize(this.schema,t))}static async retrieve(e,t){const r=await e.getAccountInfo(t);if(!r||!r.data)throw new s.FavouriteDomainNotFoundError("The favourite account does not exist");return this.deserialize(r.data)}static async getKey(e,r){return await t.PublicKey.findProgramAddress([c.__exports.Buffer.from("favourite_domain"),r.toBuffer()],e)}static getKeySync(e,r){return t.PublicKey.findProgramAddressSync([c.__exports.Buffer.from("favourite_domain"),r.toBuffer()],e)}}f.schema={struct:{tag:"u8",nameAccount:{array:{type:"u8",len:32}}}};const v=async(e,r)=>{const[a]=f.getKeySync(m,new t.PublicKey(r)),s=await f.retrieve(e,a),{registry:o,nftOwner:c}=await n.NameRegistryState.retrieve(e,s.nameAccount),l=c||o.owner;let d=await i.reverseLookup(e,s.nameAccount,o.parentName.equals(u.ROOT_DOMAIN_ACCOUNT)?void 0:o.parentName);if(!o.parentName.equals(u.ROOT_DOMAIN_ACCOUNT)){d+=`.${await i.reverseLookup(e,o.parentName)}`}return{domain:s.nameAccount,reverse:d,stale:!r.equals(l)}},p=async(e,i)=>{const s=[],n=i.map((e=>f.getKeySync(m,e)[0])),v=(await e.getMultipleAccountsInfo(n)).map((e=>(null==e?void 0:e.data)?f.deserialize(null==e?void 0:e.data).nameAccount:t.PublicKey.default)),p=await e.getMultipleAccountsInfo(v),y=[],A=p.map(((e,r)=>{var i;const s=new t.PublicKey(null!==(i=null==e?void 0:e.data.slice(0,32))&&void 0!==i?i:c.__exports.Buffer.alloc(32)),o=(null==e?void 0:e.owner.equals(u.NAME_PROGRAM_ID))&&!s.equals(u.ROOT_DOMAIN_ACCOUNT);return y.push(o?a.getReverseKeyFromDomainKey(s):t.PublicKey.default),a.getReverseKeyFromDomainKey(v[r],o?s:void 0)})),g=v.map(((e,t)=>{const r=o.getDomainMint(e);return l.getAssociatedTokenAddressSync(r,i[t],!0)})),[_,w,q]=await Promise.all([e.getMultipleAccountsInfo(A),e.getMultipleAccountsInfo(g),e.getMultipleAccountsInfo(y)]);for(let e=0;e<i.length;e++){let a="";const o=p[e],n=_[e],c=q[e],l=w[e];if(!o||!n){s.push(void 0);continue}if(c&&c.owner.equals(u.NAME_PROGRAM_ID)){a+=`.${r.deserializeReverse(c.data.slice(96))}`}if(new t.PublicKey(null==o?void 0:o.data.slice(32,64)).equals(i[e])){s.push(r.deserializeReverse(null==n?void 0:n.data.slice(96),!0)+a);continue}if(!l){s.push(void 0);continue}const m=d.AccountLayout.decode(l.data);1!==Number(m.amount)?s.push(void 0):s.push(r.deserializeReverse(null==n?void 0:n.data.slice(96))+a)}return s};exports.FavouriteDomain=f,exports.NAME_OFFERS_ID=m,exports.PrimaryDomain=f,exports.getFavoriteDomain=v,exports.getMultipleFavoriteDomains=p,exports.getMultiplePrimaryDomains=p,exports.getPrimaryDomain=v;
//# sourceMappingURL=favorite-domain.cjs.map
