"use strict";var t=require("./_assert.cjs"),s=require("./utils.cjs");class e extends s.Hash{constructor(t,e,i,n){super(),this.blockLen=t,this.outputLen=e,this.padOffset=i,this.isLE=n,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=s.createView(this.buffer)}update(e){t.exists(this);const{view:i,buffer:n,blockLen:r}=this,h=(e=s.toBytes(e)).length;for(let t=0;t<h;){const o=Math.min(r-this.pos,h-t);if(o!==r)n.set(e.subarray(t,t+o),this.pos),this.pos+=o,t+=o,this.pos===r&&(this.process(i,0),this.pos=0);else{const i=s.createView(e);for(;r<=h-t;t+=r)this.process(i,t)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){t.exists(this),t.output(e,this),this.finished=!0;const{buffer:i,view:n,blockLen:r,isLE:h}=this;let{pos:o}=this;i[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>r-o&&(this.process(n,0),o=0);for(let t=o;t<r;t++)i[t]=0;!function(t,s,e,i){if("function"==typeof t.setBigUint64)return t.setBigUint64(s,e,i);const n=BigInt(32),r=BigInt(4294967295),h=Number(e>>n&r),o=Number(e&r),u=i?4:0,f=i?0:4;t.setUint32(s+u,h,i),t.setUint32(s+f,o,i)}(n,r-8,BigInt(8*this.length),h),this.process(n,0);const u=s.createView(e),f=this.outputLen;if(f%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const c=f/4,p=this.get();if(c>p.length)throw new Error("_sha2: outputLen bigger than state");for(let t=0;t<c;t++)u.setUint32(4*t,p[t],h)}digest(){const{buffer:t,outputLen:s}=this;this.digestInto(t);const e=t.slice(0,s);return this.destroy(),e}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:s,buffer:e,length:i,finished:n,destroyed:r,pos:h}=this;return t.length=i,t.pos=h,t.finished=n,t.destroyed=r,i%s&&t.buffer.set(e),t}}exports.Chi=(t,s,e)=>t&s^~t&e,exports.HashMD=e,exports.Maj=(t,s,e)=>t&s^t&e^s&e;
//# sourceMappingURL=_md.cjs.map
