"use strict";require("../node_modules/buffer/index.cjs");var e=require("@solana/web3.js"),r=require("../utils/getDomainKeySync.cjs"),t=require("../nft/state.cjs"),o=require("../nft/const.cjs"),i=require("../record/getRecordKeySync.cjs"),a=require("../types/record.cjs"),n=require("../record_v2/getRecordV2Key.cjs"),d=require("../node_modules/@bonfida/sns-records/dist/index.cjs"),s=require("../error.cjs"),c=require("../state.cjs"),l=require("../record/checkSolRecord.cjs"),u=require("../nft/retrieveNftOwnerV2.cjs"),w=require("../_virtual/index.cjs");exports.resolve=async(f,R,y={allowPda:!1})=>{var E;const{pubkey:N}=r.getDomainKeySync(R),[g]=t.NftRecord.findKeySync(N,o.NAME_TOKENIZER_ID),S=i.getRecordKeySync(R,a.Record.SOL),v=n.getRecordV2Key(R,a.Record.SOL),[m,h,q,A]=await f.getMultipleAccountsInfo([g,S,v,N]);if(!(null==A?void 0:A.data))throw new s.DomainDoesNotExist(`Domain ${R} does not exist`);const _=c.NameRegistryState.deserialize(A.data);if(null==m?void 0:m.data){if(t.NftRecord.deserialize(m.data).tag===t.Tag.ActiveRecord){const e=await u.retrieveNftOwnerV2(f,N);if(!e)throw new s.CouldNotFindNftOwner;return e}}e:if(null==q?void 0:q.data){const r=d.Record.deserialize(q.data),t=r.getStalenessId(),o=r.getRoAId(),i=r.getContent();if(32!==i.length)throw new s.RecordMalformed("Record is malformed");if(r.header.rightOfAssociationValidation!==d.Validation.Solana||r.header.stalenessValidation!==d.Validation.Solana)throw new s.WrongValidation;if(!t.equals(_.owner.toBuffer()))break e;if(o.equals(i))return new e.PublicKey(i);throw new s.InvalidRoAError(`The RoA ID shoudl be ${new e.PublicKey(i).toBase58()} but is ${new e.PublicKey(o).toBase58()} `)}if(null==h?void 0:h.data){const r=new TextEncoder,t=w.__exports.Buffer.concat([h.data.slice(c.NameRegistryState.HEADER_LEN,c.NameRegistryState.HEADER_LEN+32),S.toBuffer()]),o=r.encode(t.toString("hex"));if(l.checkSolRecord(o,h.data.slice(c.NameRegistryState.HEADER_LEN+32,c.NameRegistryState.HEADER_LEN+32+e.SIGNATURE_LENGTH_IN_BYTES),_.owner))return new e.PublicKey(h.data.slice(c.NameRegistryState.HEADER_LEN,c.NameRegistryState.HEADER_LEN+32))}if(!e.PublicKey.isOnCurve(_.owner)){if("any"===y.allowPda)return _.owner;if(y.allowPda){const e=await f.getAccountInfo(_.owner);if(null===(E=y.programIds)||void 0===E?void 0:E.some((r=>{var t;return null===(t=null==e?void 0:e.owner)||void 0===t?void 0:t.equals(r)})))return _.owner;throw new s.PdaOwnerNotAllowed(`The Program ${null==e?void 0:e.owner.toBase58()} is not allowed`)}throw new s.PdaOwnerNotAllowed}return _.owner};
//# sourceMappingURL=resolve.cjs.map
