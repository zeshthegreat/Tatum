import{deserialize as t}from"../node_modules/borsh/lib/esm/index.mjs";import{PublicKey as e}from"@solana/web3.js";import{TWITTER_ROOT_PARENT_REGISTRY_KEY as o,TWITTER_VERIFICATION_AUTHORITY as s,NAME_PROGRAM_ID as r}from"../constants.mjs";import{NameRegistryState as m}from"../state.mjs";import{AccountDoesNotExistError as n}from"../error.mjs";import{ReverseTwitterRegistryState as a}from"./ReverseTwitterRegistryState.mjs";async function i(i,c){const f=[{memcmp:{offset:0,bytes:o.toBase58()}},{memcmp:{offset:32,bytes:c.toBase58()}},{memcmp:{offset:64,bytes:s.toBase58()}}],p=await i.getProgramAccounts(r,{filters:f});for(const o of p)if(o.account.data.length>m.HEADER_LEN+32){const s=o.account.data.slice(m.HEADER_LEN),r=new a(t(a.schema,s));return[r.twitterHandle,new e(r.twitterRegistryKey)]}throw new n("The twitter account does not exist")}export{i as getTwitterHandleandRegistryKeyViaFilters};
//# sourceMappingURL=getTwitterHandleandRegistryKeyViaFilters.mjs.map
