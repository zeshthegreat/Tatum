import{ROOT_DOMAIN_ACCOUNT as e}from"../constants.mjs";import"../node_modules/buffer/index.mjs";import{CENTRAL_STATE_SNS_RECORDS as o}from"../node_modules/@bonfida/sns-records/dist/index.mjs";import{RecordVersion as r}from"../types/record.mjs";import{InvalidInputError as t}from"../error.mjs";import{getHashedNameSync as s}from"./getHashedNameSync.mjs";import{getNameAccountKeySync as n}from"./getNameAccountKeySync.mjs";import{__exports as m}from"../_virtual/index.mjs";const i=(o,r=e,t)=>{let m=s(o);return{pubkey:n(m,t,r),hashed:m}},c=(s,n)=>{s.endsWith(".sol")&&(s=s.slice(0,-4));const c=n===r.V2?o:void 0,d=s.split(".");if(2===d.length){const e=m.Buffer.from([n||0]).toString().concat(d[0]),{pubkey:o}=i(d[1]);return{...i(e,o,c),isSub:!0,parent:o}}if(3===d.length&&n){const{pubkey:e}=i(d[2]),{pubkey:o}=i("\0".concat(d[1]),e),t=n===r.V2?"":"";return{...i(t.concat(d[0]),o,c),isSub:!0,parent:e,isSubRecord:!0}}if(d.length>=3)throw new t("The domain is malformed");return{...i(s,e),isSub:!1,parent:void 0}};export{c as getDomainKeySync};
//# sourceMappingURL=getDomainKeySync.mjs.map
