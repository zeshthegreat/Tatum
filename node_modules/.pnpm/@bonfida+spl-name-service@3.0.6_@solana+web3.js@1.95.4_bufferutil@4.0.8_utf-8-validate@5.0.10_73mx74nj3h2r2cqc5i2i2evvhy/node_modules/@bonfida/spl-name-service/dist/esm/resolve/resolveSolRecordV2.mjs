import{PublicKey as e}from"@solana/web3.js";import{Record as o}from"../types/record.mjs";import{getRecordV2Key as r}from"../record_v2/getRecordV2Key.mjs";import{Record as t,Validation as a}from"../node_modules/@bonfida/sns-records/dist/index.mjs";const s=async(s,n,i)=>{try{const d=r(i,o.SOL),c=await t.retrieve(s,d),m=c.getStalenessId(),f=c.getRoAId(),l=c.getContent();if(0===m.compare(n.toBuffer())&&c.header.stalenessValidation===a.Solana&&0===f.compare(l)&&c.header.rightOfAssociationValidation===a.Solana)return new e(l)}catch(e){if(e instanceof Error&&"FetchError"===e.name)throw e}};export{s as resolveSolRecordV2};
//# sourceMappingURL=resolveSolRecordV2.mjs.map
