import{Record as r}from"../types/record.mjs";import{InvalidRecordDataError as o}from"../error.mjs";import{PublicKey as e}from"@solana/web3.js";import{decode as t}from"../node_modules/punycode/punycode.es6.mjs";import{bech32 as m}from"../node_modules/@scure/base/lib/esm/index.mjs";import{i as s}from"../node_modules/ipaddr.js/lib/ipaddr.mjs";import{UTF8_ENCODED as n,EVM_RECORDS as i}from"./const.mjs";const d=(d,f)=>{if(n.has(f)){const o=d.toString("utf-8");return f===r.CNAME||f===r.TXT?t(o):o}if(f===r.SOL)return new e(d).toBase58();if(i.has(f))return"0x"+d.toString("hex");if(f===r.Injective)return m.encode("inj",m.toWords(d));if(f===r.A||f===r.AAAA)return s.fromByteArray([...d]).toString();throw new o("The record content is malformed")};export{d as deserializeRecordV2Content};
//# sourceMappingURL=deserializeRecordV2Content.mjs.map
