import{SystemProgram as r}from"@solana/web3.js";import{createInstruction as o}from"../instructions/createInstruction.mjs";import{NameRegistryState as t}from"../state.mjs";import{Numberu32 as m,Numberu64 as e}from"../int.mjs";import{NAME_PROGRAM_ID as s}from"../constants.mjs";import{check as i}from"../utils/check.mjs";import{getDomainKeySync as n}from"../utils/getDomainKeySync.mjs";import{serializeRecord as p}from"../record/serializeRecord.mjs";import{Record as c,RecordVersion as a}from"../types/record.mjs";import{UnsupportedRecordError as f}from"../error.mjs";const j=async(j,u,d,l,h,w)=>{i(d!==c.SOL,new f("SOL record is not supported for this instruction"));const{pubkey:y,hashed:g,parent:E}=n(`${d}.${u}`,a.V1),L=p(l,d).length,R=await j.getMinimumBalanceForRentExemption(L+t.HEADER_LEN);return o(s,r.programId,y,h,w,g,new e(R),new m(L),void 0,E,h)};export{j as createRecordInstruction};
//# sourceMappingURL=createRecordInstruction.mjs.map
