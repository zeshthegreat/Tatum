function e(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}function t(t,...n){if(!e(t))throw new Error("Uint8Array expected");if(n.length>0&&!n.includes(t.length))throw new Error(`Uint8Array expected of length ${n}, not of length=${t.length}`)}function n(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function r(e,n){t(e);const r=n.outputLen;if(e.length<r)throw new Error(`digestInto() expects output buffer of length at least ${r}`)}export{t as bytes,n as exists,e as isBytes,r as output};
//# sourceMappingURL=_assert.mjs.map
