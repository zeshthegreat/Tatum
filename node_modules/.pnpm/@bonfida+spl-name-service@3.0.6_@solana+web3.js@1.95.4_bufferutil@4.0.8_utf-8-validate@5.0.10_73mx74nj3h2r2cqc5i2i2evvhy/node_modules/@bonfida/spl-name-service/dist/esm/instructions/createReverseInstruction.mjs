import"../node_modules/buffer/index.mjs";import{TransactionInstruction as e}from"@solana/web3.js";import{serialize as i}from"../node_modules/borsh/lib/esm/index.mjs";import{__exports as s}from"../_virtual/index.mjs";class r{constructor(e){this.tag=12,this.name=e.name}serialize(){return i(r.schema,this)}getInstruction(i,r,t,u,a,n,p,b,o,m){const l=s.Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:t,isSigner:!1,isWritable:!1}),h.push({pubkey:u,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!1,isWritable:!1}),h.push({pubkey:n,isSigner:!1,isWritable:!1}),h.push({pubkey:p,isSigner:!0,isWritable:!0}),h.push({pubkey:b,isSigner:!1,isWritable:!1}),o&&h.push({pubkey:o,isSigner:!1,isWritable:!0}),m&&h.push({pubkey:m,isSigner:!0,isWritable:!0}),new e({keys:h,programId:i,data:l})}}r.schema={struct:{tag:"u8",name:"string"}};export{r as createReverseInstruction};
//# sourceMappingURL=createReverseInstruction.mjs.map
