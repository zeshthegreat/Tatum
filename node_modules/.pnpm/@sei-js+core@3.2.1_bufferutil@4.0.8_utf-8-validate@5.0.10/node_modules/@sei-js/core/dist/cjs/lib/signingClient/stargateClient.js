'use strict';

var _interopRequireDefault = require('@babel/runtime/helpers/interopRequireDefault');
Object.defineProperty(exports, '__esModule', {
	value: true
});
exports.getStargateClient = exports.getSigningClient = exports.createSeiRegistry = exports.createSeiAminoTypes = void 0;
var _regenerator = _interopRequireDefault(require('@babel/runtime/regenerator'));
var _asyncToGenerator2 = _interopRequireDefault(require('@babel/runtime/helpers/asyncToGenerator'));
var _defineProperty2 = _interopRequireDefault(require('@babel/runtime/helpers/defineProperty'));
var _toConsumableArray2 = _interopRequireDefault(require('@babel/runtime/helpers/toConsumableArray'));
var _stargate = require('@cosmjs/stargate');
var _protoSigning = require('@cosmjs/proto-signing');
var _proto = require('@sei-js/proto');
function ownKeys(e, r) {
	var t = Object.keys(e);
	if (Object.getOwnPropertySymbols) {
		var o = Object.getOwnPropertySymbols(e);
		r &&
			(o = o.filter(function (r) {
				return Object.getOwnPropertyDescriptor(e, r).enumerable;
			})),
			t.push.apply(t, o);
	}
	return t;
}
function _objectSpread(e) {
	for (var r = 1; r < arguments.length; r++) {
		var t = null != arguments[r] ? arguments[r] : {};
		r % 2
			? ownKeys(Object(t), !0).forEach(function (r) {
					(0, _defineProperty2['default'])(e, r, t[r]);
			  })
			: Object.getOwnPropertyDescriptors
			? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t))
			: ownKeys(Object(t)).forEach(function (r) {
					Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
			  });
	}
	return e;
}
var createSeiRegistry = (exports.createSeiRegistry = function createSeiRegistry() {
	return new _protoSigning.Registry(
		[].concat(
			(0, _toConsumableArray2['default'])(_stargate.defaultRegistryTypes),
			(0, _toConsumableArray2['default'])(_proto.cosmwasmProtoRegistry),
			(0, _toConsumableArray2['default'])(_proto.seiprotocolProtoRegistry)
		)
	);
});
var createSeiAminoTypes = (exports.createSeiAminoTypes = function createSeiAminoTypes() {
	var types = _objectSpread(
		_objectSpread(_objectSpread(_objectSpread({}, _proto.cosmosAminoConverters), _proto.cosmwasmAminoConverters), _proto.ibcAminoConverters),
		_proto.seiprotocolAminoConverters
	);
	return new _stargate.AminoTypes(types);
});
var getStargateClient = (exports.getStargateClient = /*#__PURE__*/ (function () {
	var _ref = (0, _asyncToGenerator2['default'])(
		/*#__PURE__*/ _regenerator['default'].mark(function _callee(rpcEndpoint) {
			var options,
				_args = arguments;
			return _regenerator['default'].wrap(function _callee$(_context) {
				while (1)
					switch ((_context.prev = _context.next)) {
						case 0:
							options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
							return _context.abrupt('return', _stargate.StargateClient.connect(rpcEndpoint, options));
						case 2:
						case 'end':
							return _context.stop();
					}
			}, _callee);
		})
	);
	return function getStargateClient(_x) {
		return _ref.apply(this, arguments);
	};
})());
var getSigningClient = (exports.getSigningClient = /*#__PURE__*/ (function () {
	var _ref2 = (0, _asyncToGenerator2['default'])(
		/*#__PURE__*/ _regenerator['default'].mark(function _callee2(rpcEndpoint, signer) {
			var options,
				registry,
				aminoTypes,
				_args2 = arguments;
			return _regenerator['default'].wrap(function _callee2$(_context2) {
				while (1)
					switch ((_context2.prev = _context2.next)) {
						case 0:
							options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};
							registry = createSeiRegistry();
							aminoTypes = createSeiAminoTypes();
							return _context2.abrupt(
								'return',
								_stargate.SigningStargateClient.connectWithSigner(
									rpcEndpoint,
									signer,
									_objectSpread(
										{
											registry: registry,
											aminoTypes: aminoTypes
										},
										options
									)
								)
							);
						case 4:
						case 'end':
							return _context2.stop();
					}
			}, _callee2);
		})
	);
	return function getSigningClient(_x2, _x3) {
		return _ref2.apply(this, arguments);
	};
})());
//# sourceMappingURL=stargateClient.js.map
