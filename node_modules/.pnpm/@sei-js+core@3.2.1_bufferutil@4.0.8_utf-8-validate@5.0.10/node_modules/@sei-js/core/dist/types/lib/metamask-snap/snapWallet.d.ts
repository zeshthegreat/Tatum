import { SignDoc } from 'cosmjs-types/cosmos/tx/v1beta1/tx';
import { AccountData, StdSignDoc } from '@cosmjs/amino';
import { SeiWallet } from '../wallet';
export declare class SnapWallet {
    private privateKey;
    private compressedPubKey;
    private address;
    constructor(privateKey: Uint8Array, compressedPubKey: Uint8Array, address: string);
    static create(privateKey: string): SnapWallet;
    getAccounts(): AccountData[];
    signDirect(signerAddress: string, signDoc: SignDoc): Promise<{
        signed: {
            accountNumber: string;
            bodyBytes: Uint8Array;
            authInfoBytes: Uint8Array;
            chainId: string;
        };
        signature: import("@cosmjs/amino").StdSignature;
    }>;
    signAmino(signerAddress: string, signDoc: StdSignDoc, options?: {
        extraEntropy: boolean;
    }): Promise<{
        signed: StdSignDoc;
        signature: import("@cosmjs/amino").StdSignature;
    }>;
}
export declare function getWallet(account_index: number | undefined, snapId: string): Promise<SnapWallet>;
export declare const getMetaMaskSnapSeiWallet: (snapId: string) => SeiWallet;
