import { PublicKey } from "@solana/web3.js";
import { Validation } from "./state";
import { Buffer } from "buffer";
/**
 * Mainnet program ID
 */
export declare const SNS_RECORDS_ID: PublicKey;
/**
 * Central State
 */
export declare const CENTRAL_STATE_SNS_RECORDS: PublicKey;
/**
 * This function can be used as a js binding example.
 * @param feePayer The fee payer of the transaction
 * @param programId The program ID
 * @returns
 */
export declare const allocateAndPostRecord: (feePayer: PublicKey, recordKey: PublicKey, domainKey: PublicKey, domainOwner: PublicKey, nameProgramId: PublicKey, record: string, content: Buffer, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
export declare const allocateRecord: (feePayer: PublicKey, recordKey: PublicKey, domainKey: PublicKey, domainOwner: PublicKey, nameProgramId: PublicKey, record: string, contentLength: number, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
export declare const deleteRecord: (feePayer: PublicKey, domainKey: PublicKey, domainOwner: PublicKey, recordKey: PublicKey, nameProgramId: PublicKey, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
export declare const editRecord: (feePayer: PublicKey, recordKey: PublicKey, domainKey: PublicKey, domainOwner: PublicKey, nameProgramId: PublicKey, record: string, content: Buffer, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
export declare const validateEthSignature: (feePayer: PublicKey, recordKey: PublicKey, domainKey: PublicKey, domainOwner: PublicKey, nameProgramId: PublicKey, validation: Validation, signature: Buffer, expectedPubkey: Buffer, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
export declare const validateSolanaSignature: (feePayer: PublicKey, recordKey: PublicKey, domainKey: PublicKey, domainOwner: PublicKey, verifier: PublicKey, nameProgramId: PublicKey, staleness: boolean, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
export declare const writeRoa: (feePayer: PublicKey, nameProgramId: PublicKey, recordKey: PublicKey, domainKey: PublicKey, domainOwner: PublicKey, roaId: PublicKey, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
export declare const unverifyRoa: (feePayer: PublicKey, nameProgramId: PublicKey, recordKey: PublicKey, domainKey: PublicKey, verifier: PublicKey, programId: PublicKey) => import("@solana/web3.js").TransactionInstruction;
