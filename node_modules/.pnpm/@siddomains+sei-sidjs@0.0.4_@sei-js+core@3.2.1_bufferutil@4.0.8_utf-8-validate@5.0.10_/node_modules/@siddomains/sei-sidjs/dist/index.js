"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
Object.defineProperty(exports, "domainNode", {
  enumerable: true,
  get: function get() {
    return _utils.domainNode;
  }
});
Object.defineProperty(exports, "domainTokenId", {
  enumerable: true,
  get: function get() {
    return _utils.domainTokenId;
  }
});
exports.getSeiIDAddress = getSeiIDAddress;
Object.defineProperty(exports, "validateName", {
  enumerable: true,
  get: function get() {
    return _utils.validateName;
  }
});
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _utils = require("./utils");
function getSeiIDAddress(networkId) {
  switch (networkId) {
    case 'atlantic-2':
      return 'sei1q49lp2y87lt0p9pcpv3al2x3gxq3g2504sxh8knamnlarhwhckgqctpnf0';
    case 'pacific-1':
      return 'sei1qwzmp9tw2guxjwjteyjn52efu5ny0a5sc9e7lq69zytn87f30hksrlytqy';
    default:
      return '';
  }
}
function getSeiIDReverseResolverAddress(networkId) {
  switch (networkId) {
    case 'atlantic-2':
      return 'sei1a59k7mc9hsvtaeu532etl2geqmqdyufjncjkg0h3lxsu5u2rpensanaxwf';
    case 'pacific-1':
      return 'sei1qujw7gxacyk08fpg0lsf377f727ldq8f9cmjlrxt6awdkag9ypjsdnkh98';
    default:
      return '';
  }
}
var Resolver = /*#__PURE__*/function () {
  function Resolver(_ref) {
    var address = _ref.address,
      client = _ref.client,
      seiIdAddress = _ref.seiIdAddress;
    (0, _classCallCheck2["default"])(this, Resolver);
    this.address = address;
    this.client = client;
    this.seiIdAddr = seiIdAddress;
  }
  (0, _createClass2["default"])(Resolver, [{
    key: "name",
    value: function name(_name) {
      (0, _utils.validateName)(_name);
      return new Name({
        name: _name,
        client: this.client,
        resolver: this.address,
        seiIdAddress: this.seiIdAddr
      });
    }
  }]);
  return Resolver;
}();
var Name = /*#__PURE__*/function () {
  function Name(options) {
    (0, _classCallCheck2["default"])(this, Name);
    var name = options.name,
      client = options.client,
      seiIdAddress = options.seiIdAddress,
      resolver = options.resolver;
    this.client = client;
    this.seiIdAddr = seiIdAddress;
    this.name = name;
    this.namehash = (0, _utils.namehash)(name);
    this.resolver = resolver;
  }
  (0, _createClass2["default"])(Name, [{
    key: "getOwner",
    value: function () {
      var _getOwner = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
        var msg, res;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              msg = {
                owner: {
                  node: (0, _utils.domainNode)(this.name)
                }
              };
              _context.next = 4;
              return this.client.queryContractSmart(this.seiIdAddr, msg);
            case 4:
              res = _context.sent;
              return _context.abrupt("return", res === null || res === void 0 ? void 0 : res.owner);
            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](0);
              console.error(_context.t0);
            case 11:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 8]]);
      }));
      function getOwner() {
        return _getOwner.apply(this, arguments);
      }
      return getOwner;
    }()
  }, {
    key: "getResolver",
    value: function () {
      var _getResolver = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
        var msg, res;
        return _regenerator["default"].wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              msg = {
                resolver: {
                  node: (0, _utils.domainNode)(this.name)
                }
              };
              _context2.next = 4;
              return this.client.queryContractSmart(this.seiIdAddr, msg);
            case 4:
              res = _context2.sent;
              return _context2.abrupt("return", res === null || res === void 0 ? void 0 : res.resolver);
            case 8:
              _context2.prev = 8;
              _context2.t0 = _context2["catch"](0);
              console.error(_context2.t0);
            case 11:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[0, 8]]);
      }));
      function getResolver() {
        return _getResolver.apply(this, arguments);
      }
      return getResolver;
    }()
  }, {
    key: "getResolverAddr",
    value: function () {
      var _getResolverAddr = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3() {
        return _regenerator["default"].wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (!this.resolver) {
                _context3.next = 4;
                break;
              }
              return _context3.abrupt("return", this.resolver);
            case 4:
              return _context3.abrupt("return", this.getResolver());
            case 5:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function getResolverAddr() {
        return _getResolverAddr.apply(this, arguments);
      }
      return getResolverAddr;
    }()
  }, {
    key: "getAddress",
    value: function () {
      var _getAddress = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4() {
        var resolverAddr, msg, res;
        return _regenerator["default"].wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.next = 2;
              return this.getResolverAddr();
            case 2:
              resolverAddr = _context4.sent;
              if (resolverAddr) {
                _context4.next = 5;
                break;
              }
              return _context4.abrupt("return");
            case 5:
              _context4.prev = 5;
              msg = {
                address: {
                  node: (0, _utils.domainNode)(this.name)
                }
              };
              _context4.next = 9;
              return this.client.queryContractSmart(resolverAddr, msg);
            case 9:
              res = _context4.sent;
              return _context4.abrupt("return", res === null || res === void 0 ? void 0 : res.address);
            case 13:
              _context4.prev = 13;
              _context4.t0 = _context4["catch"](5);
              console.error(_context4.t0);
            case 16:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this, [[5, 13]]);
      }));
      function getAddress() {
        return _getAddress.apply(this, arguments);
      }
      return getAddress;
    }()
  }]);
  return Name;
}();
var SeiID = /*#__PURE__*/function () {
  function SeiID(options) {
    (0, _classCallCheck2["default"])(this, SeiID);
    var chainId = options.chainId,
      client = options.client,
      seiIdAddress = options.seiIdAddress;
    if (!client) throw new Error('client is required');
    if (!chainId) throw new Error('chainId is required');
    this.client = client;
    this.chainId = chainId;
    this.seiIdAddr = seiIdAddress || getSeiIDAddress(chainId);
  }
  (0, _createClass2["default"])(SeiID, [{
    key: "name",
    value: function name(_name2) {
      (0, _utils.validateName)(_name2);
      return new Name({
        name: _name2,
        client: this.client,
        seiIdAddress: this.seiIdAddr
      });
    }
  }, {
    key: "resolver",
    value: function resolver(address) {
      return new Resolver({
        client: this.client,
        address: address,
        seiIdAddress: this.seiIdAddr
      });
    }
  }, {
    key: "getName",
    value: function () {
      var _getName = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5(address) {
        var reverseResolver, msg, res, domain, addr;
        return _regenerator["default"].wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              reverseResolver = getSeiIDReverseResolverAddress(this.chainId);
              if (reverseResolver) {
                _context5.next = 3;
                break;
              }
              return _context5.abrupt("return");
            case 3:
              _context5.prev = 3;
              msg = {
                name: {
                  address: address.toLowerCase()
                }
              };
              _context5.next = 7;
              return this.client.queryContractSmart(reverseResolver, msg);
            case 7:
              res = _context5.sent;
              if (!(res !== null && res !== void 0 && res.name)) {
                _context5.next = 16;
                break;
              }
              domain = res.name.endsWith('.sei') ? res.name : res.name + '.sei';
              _context5.next = 12;
              return this.name(domain).getAddress();
            case 12:
              addr = _context5.sent;
              if (!((addr === null || addr === void 0 ? void 0 : addr.toLowerCase()) !== address.toLowerCase())) {
                _context5.next = 15;
                break;
              }
              return _context5.abrupt("return", undefined);
            case 15:
              return _context5.abrupt("return", domain);
            case 16:
              _context5.next = 25;
              break;
            case 18:
              _context5.prev = 18;
              _context5.t0 = _context5["catch"](3);
              if (!(_context5.t0.message === 'Query failed with (18): alloc::string::String not found: query wasm contract failed: invalid request')) {
                _context5.next = 24;
                break;
              }
              return _context5.abrupt("return", undefined);
            case 24:
              console.error(_context5.t0);
            case 25:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this, [[3, 18]]);
      }));
      function getName(_x) {
        return _getName.apply(this, arguments);
      }
      return getName;
    }()
  }]);
  return SeiID;
}();
exports["default"] = SeiID;