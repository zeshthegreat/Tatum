"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodeLabelhash = decodeLabelhash;
exports.encodeLabelhash = encodeLabelhash;
exports.isDecrypted = isDecrypted;
exports.isEncodedLabelhash = isEncodedLabelhash;
exports.labelhash = labelhash;
var _jsSha = require("js-sha3");
var _ethEnsNamehash = _interopRequireDefault(require("@ensdomains/eth-ens-namehash"));
function encodeLabelhash(hash) {
  if (!hash.startsWith('0x')) {
    throw new Error('Expected label hash to start with 0x');
  }
  if (hash.length !== 66) {
    throw new Error('Expected label hash to have a length of 66');
  }
  return "[".concat(hash.slice(2), "]");
}
function decodeLabelhash(hash) {
  if (!(hash.startsWith('[') && hash.endsWith(']'))) {
    throw Error('Expected encoded labelhash to start and end with square brackets');
  }
  if (hash.length !== 66) {
    throw Error('Expected encoded labelhash to have a length of 66');
  }
  return "".concat(hash.slice(1, -1));
}
function isEncodedLabelhash(hash) {
  return hash.startsWith('[') && hash.endsWith(']') && hash.length === 66;
}
function isDecrypted(name) {
  var nameArray = name.split('.');
  var decrypted = nameArray.reduce(function (acc, label) {
    if (acc === false) return false;
    return isEncodedLabelhash(label) ? false : true;
  }, true);
  return decrypted;
}
function labelhash(unnormalisedLabelOrLabelhash) {
  return isEncodedLabelhash(unnormalisedLabelOrLabelhash) ? '0x' + decodeLabelhash(unnormalisedLabelOrLabelhash) : '0x' + (0, _jsSha.keccak_256)(_ethEnsNamehash["default"].normalize(unnormalisedLabelOrLabelhash));
}