"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decodeLabelhash = decodeLabelhash;
exports.isEncodedLabelhash = isEncodedLabelhash;
exports.labelhash = labelhash;
var _ethEnsNamehash = _interopRequireDefault(require("@ensdomains/eth-ens-namehash"));
var _crypto = require("@cosmjs/crypto");
var _encoding = require("@cosmjs/encoding");
function decodeLabelhash(hash) {
  if (!(hash.startsWith('[') && hash.endsWith(']'))) {
    throw Error('Expected encoded labelhash to start and end with square brackets');
  }
  if (hash.length !== 66) {
    throw Error('Expected encoded labelhash to have a length of 66');
  }
  return "".concat(hash.slice(1, -1));
}
function isEncodedLabelhash(hash) {
  return hash.startsWith('[') && hash.endsWith(']') && hash.length === 66;
}
function labelhash(unnormalisedLabelOrLabelhash) {
  var tEncoder = new TextEncoder();
  return isEncodedLabelhash(unnormalisedLabelOrLabelhash) ? '0x' + decodeLabelhash(unnormalisedLabelOrLabelhash) : '0x' + (0, _encoding.toHex)((0, _crypto.keccak256)(tEncoder.encode(_ethEnsNamehash["default"].normalize(unnormalisedLabelOrLabelhash))));
}