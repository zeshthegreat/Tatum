"use strict";var e=require("@solana/web3.js"),t=require("../instructions/createSplitV2Instruction.cjs"),n=require("../constants.cjs"),s=require("../utils/getHashedNameSync.cjs"),o=require("../utils/getNameAccountKeySync.cjs"),r=require("../utils/getPythFeedAccountKey.cjs"),c=require("../error.cjs"),i=require("../node_modules/@solana/spl-token/lib/esm/state/mint.cjs"),a=require("../node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.cjs"),u=require("../node_modules/@solana/spl-token/lib/esm/constants.cjs");exports.registerDomainNameV2=async(d,l,A,m,R,T=n.USDC_MINT,_)=>{if(l.includes(".")||l.trim().toLowerCase()!==l)throw new c.InvalidDomainError("The domain name is malformed");const y=s.getHashedNameSync(l),S=o.getNameAccountKeySync(y,void 0,n.ROOT_DOMAIN_ACCOUNT),E=s.getHashedNameSync(S.toBase58()),I=o.getNameAccountKeySync(E,n.CENTRAL_STATE),[N]=e.PublicKey.findProgramAddressSync([S.toBuffer()],n.REGISTER_PROGRAM_ID),g=n.REFERRERS.findIndex((e=>null==_?void 0:_.equals(e)));let O;const h=[];if(-1!==g&&_){O=i.getAssociatedTokenAddressSync(T,_,!0);const e=await d.getAccountInfo(O);if(!(null==e?void 0:e.data)){const e=a.createAssociatedTokenAccountIdempotentInstruction(m,O,_,T);h.push(e)}}const P=i.getAssociatedTokenAddressSync(T,n.VAULT_OWNER,!0),f=n.PYTH_PULL_FEEDS.get(T.toBase58());if(!f)throw new c.PythFeedNotFoundError("The Pyth account for the provided mint was not found");const[p]=r.getPythFeedAccountKey(0,f),q=new t.createSplitV2Instruction({name:l,space:A,referrerIdxOpt:-1!=g?g:null}).getInstruction(n.REGISTER_PROGRAM_ID,n.NAME_PROGRAM_ID,n.ROOT_DOMAIN_ACCOUNT,S,I,e.SystemProgram.programId,n.CENTRAL_STATE,m,m,m,R,p,P,u.TOKEN_PROGRAM_ID,e.SYSVAR_RENT_PUBKEY,N,O);return h.push(q),h};
//# sourceMappingURL=registerDomainNameV2.cjs.map
