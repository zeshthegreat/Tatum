"use strict";var e=require("../node_modules/borsh/lib/esm/index.cjs"),r=require("@solana/web3.js");require("../node_modules/buffer/index.cjs");var t,n=require("../error.cjs"),i=require("../_virtual/index.cjs");exports.Tag=void 0,(t=exports.Tag||(exports.Tag={}))[t.Uninitialized=0]="Uninitialized",t[t.CentralState=1]="CentralState",t[t.ActiveRecord=2]="ActiveRecord",t[t.InactiveRecord=3]="InactiveRecord";class a{constructor(e){this.tag=e.tag,this.nonce=e.nonce,this.nameAccount=new r.PublicKey(e.nameAccount),this.owner=new r.PublicKey(e.owner),this.nftMint=new r.PublicKey(e.nftMint)}static deserialize(r){return new a(e.deserialize(this.schema,r))}static async retrieve(e,r){const t=await e.getAccountInfo(r);if(!t||!t.data)throw new n.NftRecordNotFoundError("NFT record not found: "+r.toBase58());return this.deserialize(t.data)}static async findKey(e,t){return await r.PublicKey.findProgramAddress([i.__exports.Buffer.from("nft_record"),e.toBuffer()],t)}static findKeySync(e,t){return r.PublicKey.findProgramAddressSync([i.__exports.Buffer.from("nft_record"),e.toBuffer()],t)}}a.LEN=98,a.schema={struct:{tag:"u8",nonce:"u8",nameAccount:{array:{type:"u8",len:32}},owner:{array:{type:"u8",len:32}},nftMint:{array:{type:"u8",len:32}}}},exports.NftRecord=a;
//# sourceMappingURL=state.cjs.map
