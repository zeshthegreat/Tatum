{"version":3,"file":"sha512.mjs","sources":["../../../../../../node_modules/@noble/hashes/esm/sha512.js"],"sourcesContent":["import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map"],"names":["SHA512_Kh","SHA512_Kl","u64","split","map","n","BigInt","SHA512_W_H","Uint32Array","SHA512_W_L","SHA512","HashMD","constructor","super","this","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","get","set","process","view","offset","i","getUint32","W15h","W15l","s0h","rotrSH","shrSH","s0l","rotrSL","shrSL","W2h","W2l","s1h","rotrBH","s1l","rotrBL","SUMl","add4L","SUMh","add4H","sigma1h","sigma1l","CHIh","CHIl","T1ll","add5L","T1h","add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","h","l","add","All","add3L","add3H","roundClean","fill","destroy","buffer","sha512","wrapConstructor"],"mappings":"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","x_google_ignoreList":[0]}