"use strict";require("./node_modules/buffer/index.cjs");var e=require("@solana/web3.js"),t=require("./instructions/createInstruction.cjs"),r=require("./instructions/deleteInstruction.cjs"),n=require("./instructions/transferInstruction.cjs"),s=require("./instructions/updateInstruction.cjs"),i=require("./instructions/createReverseInstruction.cjs"),a=require("./instructions/createInstructionV3.cjs"),o=require("./instructions/burnInstruction.cjs"),c=require("./instructions/createSplitV2Instruction.cjs"),u=require("./state.cjs"),d=require("./int.cjs"),R=require("./deprecated/utils.cjs"),m=require("./error.cjs"),E=require("./utils/deserializeReverse.cjs"),A=require("./utils/getHashedNameSync.cjs"),y=require("./utils/getPythFeedAccountKey.cjs"),_=require("./constants.cjs"),S=require("./_virtual/index.cjs"),P=require("./node_modules/@solana/spl-token/lib/esm/state/mint.cjs"),I=require("./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.cjs"),N=require("./node_modules/@solana/spl-token/lib/esm/constants.cjs");const g={NAME_PROGRAM_ID:new e.PublicKey("namesLPneVptA9Z5rqUDD9tMTWEJwofgaYwp8cawRkX"),HASH_PREFIX:"SPL Name Service",ROOT_DOMAIN_ACCOUNT:new e.PublicKey("5eoDkP6vCQBXqDV9YN2NdUs3nmML3dMRNmEYpiyVNBm2"),REGISTER_PROGRAM_ID:new e.PublicKey("snshBoEQ9jx4QoHBpZDQPYdNCtw7RMxJvYrKFEhwaPJ"),REVERSE_LOOKUP_CLASS:new e.PublicKey("7NbD1vprif6apthEZAqhRfYuhrqnuderB8qpnfXGCc8H"),USDC_MINT:new e.PublicKey("4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU"),REFERRERS:[new e.PublicKey("3ogYncmMM5CmytsGCqKHydmXmKUZ6sGWvizkzqwT7zb1")],TOKENS_SYM_MINT:new Map([["4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU","USDC"],["EJwZgeZrdC8TXTQbQBoL6bfuAnFUUy1PVCMB4DYPzVaS","USDT"],["So11111111111111111111111111111111111111112","SOL"],["fidaWCioBQjieRrUQDxxS5Uxmq1CLi2VuVRyv4dEBey","FIDA"],["DL4ivZm3NVHWk9ZvtcqTchxoKArDK4rT3vbDx2gYVr7P","INJ"]]),PYTH_FEEDS:new Map([["4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU",{price:"5SSkXsEKQepHHAewytPVwdej4epN1nxgLVM84L4KXgy7",product:"6NpdXrQEpmDZ3jZKmM2rhdmkd3H6QAk23j2x8bkXcHKA"}],["EJwZgeZrdC8TXTQbQBoL6bfuAnFUUy1PVCMB4DYPzVaS",{price:"38xoQ4oeJCBrcVvca2cGk7iV1dAfrmTR1kmhSCJQ8Jto",product:"C5wDxND9E61RZ1wZhaSTWkoA8udumaHnoQY6BBsiaVpn"}],["So11111111111111111111111111111111111111112",{price:"J83w4HKfqxwcq3BEMMkPFSppX3gqekLyLJBexebFVkix",product:"3Mnn2fX6rQyUsyELYms1sBJyChWofzSNRoqYzvgMVz5E"}],["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp",{price:"7teETxN9Y8VK6uJxsctHEwST75mKLLwPH1jaFdvTQCpD",product:"5kWV4bhHeZANzg5MWaYCQYEEKHjur5uz1mu5vuLHwiLB"}],["DL4ivZm3NVHWk9ZvtcqTchxoKArDK4rT3vbDx2gYVr7P",{price:"44uRsNnT35kjkscSu59MxRr9CfkLZWf6gny8bWqUbVxE",product:"7UHB783Nh4avW3Yw9yoktf2KjxipU56KPahA51RnCCYE"}]]),PYTH_MAPPING_ACC:new e.PublicKey("BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2"),VAULT_OWNER:new e.PublicKey("SNSaTJbEv2iT3CUrCQYa9zpGjbBVWhFCPaSJHkaJX34")},l=(t,r,n)=>{const s=[t];r?s.push(r.toBuffer()):s.push(S.__exports.Buffer.alloc(32)),n?s.push(n.toBuffer()):s.push(S.__exports.Buffer.alloc(32));const[i]=e.PublicKey.findProgramAddressSync(s,g.NAME_PROGRAM_ID);return i},f=(e,t=g.ROOT_DOMAIN_ACCOUNT,r)=>{let n=A.getHashedNameSync(e);return{pubkey:l(n,r,t),hashed:n}},p=e=>{e.endsWith(".sol")&&(e=e.slice(0,-4));const t=e.split(".");if(2===t.length){const e="\0".concat(t[0]),{pubkey:r}=f(t[1]);return{...f(e,r),isSub:!0,parent:r}}if(t.length>=3)throw new m.InvalidInputError("The domain is malformed");return{...f(e,g.ROOT_DOMAIN_ACCOUNT),isSub:!1,parent:void 0}},w=(e,t)=>{const{pubkey:r,parent:n}=p(e),s=A.getHashedNameSync(r.toBase58());return l(s,g.REVERSE_LOOKUP_CLASS,t?n:void 0)};async function T(r,n,s,i,a,o,c,u){const m=await R.getHashedName(n),E=await l(m,c,u),A=o||await r.getMinimumBalanceForRentExemption(s);let y;if(u){const{registry:e}=await R.getNameOwner(r,u);y=e.owner}return t.createInstruction(g.NAME_PROGRAM_ID,e.SystemProgram.programId,E,a,i,m,new d.Numberu64(A),new d.Numberu32(s),c,u,y)}const D=async(t,r,n,s,a)=>{let[o]=await e.PublicKey.findProgramAddress([g.REGISTER_PROGRAM_ID.toBuffer()],g.REGISTER_PROGRAM_ID),c=await R.getHashedName(t.toBase58()),u=l(c,o,s);return[[],[new i.createReverseInstruction({name:r}).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,g.ROOT_DOMAIN_ACCOUNT,u,e.SystemProgram.programId,o,n,e.SYSVAR_RENT_PUBKEY,s,a)]]},M={utils:{getNameAccountKeySync:l,reverseLookup:async(e,t)=>{const r=A.getHashedNameSync(t.toBase58()),n=l(r,g.REVERSE_LOOKUP_CLASS),{registry:s}=await u.NameRegistryState.retrieve(e,n);if(!s.data)throw new m.NoAccountDataError("The registry data is empty");return E.deserializeReverse(s.data)},_deriveSync:f,getDomainKeySync:p,getReverseKeySync:w},constants:g,bindings:{createNameRegistry:T,updateNameRegistryData:async function(e,t,r,n,i,a){const o=await R.getHashedName(t),c=l(o,i,a);let m;return m=i||(await u.NameRegistryState.retrieve(e,c)).registry.owner,s.updateInstruction(g.NAME_PROGRAM_ID,c,new d.Numberu32(r),n,m)},transferNameOwnership:async function(e,t,r,s,i,a){const o=await R.getHashedName(t),c=l(o,s,i);let d;return d=s||(await u.NameRegistryState.retrieve(e,c)).registry.owner,n.transferInstruction(g.NAME_PROGRAM_ID,c,r,d,s,i,a)},deleteNameRegistry:async function(e,t,n,s,i){const a=await R.getHashedName(t),o=l(a,s,i);let c;return c=s||(await u.NameRegistryState.retrieve(e,o)).registry.owner,r.deleteInstruction(g.NAME_PROGRAM_ID,o,n,c)},registerDomainName:async(t,r,n,s,i,o=g.USDC_MINT,c)=>{if(r.includes(".")||r.trim().toLowerCase()!==r)throw new m.InvalidDomainError("The domain is malformed");const[u]=e.PublicKey.findProgramAddressSync([g.REGISTER_PROGRAM_ID.toBuffer()],g.REGISTER_PROGRAM_ID),d=A.getHashedNameSync(r),R=l(d,void 0,g.ROOT_DOMAIN_ACCOUNT),E=A.getHashedNameSync(R.toBase58()),y=l(E,u),[_]=e.PublicKey.findProgramAddressSync([R.toBuffer()],g.REGISTER_PROGRAM_ID),S=g.REFERRERS.findIndex((e=>null==c?void 0:c.equals(e)));let f;const p=[];if(-1!==S&&c){f=P.getAssociatedTokenAddressSync(o,c,!0);const e=await t.getAccountInfo(f);if(!(null==e?void 0:e.data)){const e=I.createAssociatedTokenAccountIdempotentInstruction(s,f,c,o);p.push(e)}}const w=P.getAssociatedTokenAddressSync(o,g.VAULT_OWNER),T=M.constants.PYTH_FEEDS.get(o.toBase58());if(!T)throw new m.PythFeedNotFoundError("The Pyth account for the provided mint was not found");const D=new a.createInstructionV3({name:r,space:n,referrerIdxOpt:-1!=S?S:null}).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,g.ROOT_DOMAIN_ACCOUNT,R,y,e.SystemProgram.programId,u,s,i,g.PYTH_MAPPING_ACC,new e.PublicKey(T.product),new e.PublicKey(T.price),w,N.TOKEN_PROGRAM_ID,e.SYSVAR_RENT_PUBKEY,_,f);return p.push(D),[[],p]},createReverseName:D,createSubdomain:async(e,t,r,n=2e3)=>{const s=[],i=t.split(".")[0];if(!i)throw new m.InvalidSubdomainError("The subdomain is malformed");const{parent:a,pubkey:o}=p(t),c=await e.getMinimumBalanceForRentExemption(n+u.NameRegistryState.HEADER_LEN),d=await T(e,"\0".concat(i),n,r,r,c,void 0,a);s.push(d);const R=w(t,!0),E=await e.getAccountInfo(R);if(!(null==E?void 0:E.data)){const[,e]=await D(o,"\0".concat(i),r,a,r);s.push(...e)}return[[],s]},burnDomain:(t,r,n)=>{const{pubkey:s}=p(t),[i]=e.PublicKey.findProgramAddressSync([s.toBuffer()],g.REGISTER_PROGRAM_ID),[a]=e.PublicKey.findProgramAddressSync([s.toBuffer(),Uint8Array.from([1,1])],g.REGISTER_PROGRAM_ID);return(new o.burnInstruction).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,e.SystemProgram.programId,s,w(t),a,i,g.REVERSE_LOOKUP_CLASS,r,n)},transferSubdomain:async(e,t,r,s,i)=>{const{pubkey:a,isSub:o,parent:c}=p(t);if(!c||!o)throw new m.InvalidSubdomainError("The subdomain is not valid");if(!i){const{registry:t}=await u.NameRegistryState.retrieve(e,a);i=t.owner}let d,R;s&&(d=c,R=(await u.NameRegistryState.retrieve(e,c)).registry.owner);return n.transferInstruction(g.NAME_PROGRAM_ID,a,r,i,void 0,d,R)},registerDomainNameV2:async(t,r,n,s,i,a=g.USDC_MINT,o)=>{if(r.includes(".")||r.trim().toLowerCase()!==r)throw new m.InvalidDomainError("The domain name is malformed");const[u]=e.PublicKey.findProgramAddressSync([g.REGISTER_PROGRAM_ID.toBuffer()],g.REGISTER_PROGRAM_ID),d=A.getHashedNameSync(r),R=l(d,void 0,g.ROOT_DOMAIN_ACCOUNT),E=A.getHashedNameSync(R.toBase58()),S=l(E,u),[f]=e.PublicKey.findProgramAddressSync([R.toBuffer()],g.REGISTER_PROGRAM_ID),p=g.REFERRERS.findIndex((e=>null==o?void 0:o.equals(e)));let w;const T=[];if(-1!==p&&o){w=P.getAssociatedTokenAddressSync(a,o,!0);const e=await t.getAccountInfo(w);if(!(null==e?void 0:e.data)){const e=I.createAssociatedTokenAccountIdempotentInstruction(s,w,o,a);T.push(e)}}const D=P.getAssociatedTokenAddressSync(a,g.VAULT_OWNER,!0),M=_.PYTH_PULL_FEEDS.get(a.toBase58());if(!M)throw new m.PythFeedNotFoundError("The Pyth account for the provided mint was not found");const[O]=y.getPythFeedAccountKey(0,M),h=new c.createSplitV2Instruction({name:r,space:n,referrerIdxOpt:-1!=p?p:null}).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,g.ROOT_DOMAIN_ACCOUNT,R,S,e.SystemProgram.programId,u,s,s,s,i,O,D,N.TOKEN_PROGRAM_ID,e.SYSVAR_RENT_PUBKEY,f,w);return T.push(h),T}}};exports.devnet=M;
//# sourceMappingURL=devnet.cjs.map
