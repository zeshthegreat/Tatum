import{validateField as t,nLength as e}from"./modular.mjs";import{validateObject as n}from"./utils.mjs";
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const i=BigInt(0),o=BigInt(1);function r(t,e){const n=(t,e)=>{const n=e.negate();return t?n:e},r=t=>({windows:Math.ceil(e/t)+1,windowSize:2**(t-1)});return{constTimeNegate:n,unsafeLadder(e,n){let r=t.ZERO,s=e;for(;n>i;)n&o&&(r=r.add(s)),s=s.double(),n>>=o;return r},precomputeWindow(t,e){const{windows:n,windowSize:i}=r(e),o=[];let s=t,d=s;for(let t=0;t<n;t++){d=s,o.push(d);for(let t=1;t<i;t++)d=d.add(s),o.push(d);s=d.double()}return o},wNAF(e,i,s){const{windows:d,windowSize:u}=r(e);let c=t.ZERO,w=t.BASE;const a=BigInt(2**e-1),f=2**e,l=BigInt(e);for(let t=0;t<d;t++){const e=t*u;let r=Number(s&a);s>>=l,r>u&&(r-=f,s+=o);const d=e,g=e+Math.abs(r)-1,p=t%2!=0,h=r<0;0===r?w=w.add(n(p,i[d])):c=c.add(n(h,i[g]))}return{p:c,f:w}},wNAFCached(t,e,n,i){const o=t._WINDOW_SIZE||1;let r=e.get(t);return r||(r=this.precomputeWindow(t,o),1!==o&&e.set(t,i(r))),this.wNAF(o,r,n)}}}function s(i){return t(i.Fp),n(i,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...e(i.n,i.nBitLength),...i,p:i.Fp.ORDER})}export{s as validateBasic,r as wNAF};
//# sourceMappingURL=curve.mjs.map
