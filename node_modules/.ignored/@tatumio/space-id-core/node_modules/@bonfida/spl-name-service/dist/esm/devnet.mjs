import"./node_modules/buffer/index.mjs";import{PublicKey as t,SystemProgram as e,SYSVAR_RENT_PUBKEY as r}from"@solana/web3.js";import{createInstruction as n}from"./instructions/createInstruction.mjs";import{deleteInstruction as o}from"./instructions/deleteInstruction.mjs";import{transferInstruction as s}from"./instructions/transferInstruction.mjs";import{updateInstruction as i}from"./instructions/updateInstruction.mjs";import{createReverseInstruction as a}from"./instructions/createReverseInstruction.mjs";import{createInstructionV3 as c}from"./instructions/createInstructionV3.mjs";import{burnInstruction as m}from"./instructions/burnInstruction.mjs";import{createSplitV2Instruction as R}from"./instructions/createSplitV2Instruction.mjs";import{NameRegistryState as u}from"./state.mjs";import{Numberu32 as d,Numberu64 as f}from"./int.mjs";import{getHashedName as E,getNameOwner as p}from"./deprecated/utils.mjs";import{NoAccountDataError as A,InvalidInputError as _,InvalidDomainError as w,PythFeedNotFoundError as I,InvalidSubdomainError as M}from"./error.mjs";import{deserializeReverse as S}from"./utils/deserializeReverse.mjs";import{getHashedNameSync as D}from"./utils/getHashedNameSync.mjs";import{getPythFeedAccountKey as O}from"./utils/getPythFeedAccountKey.mjs";import{PYTH_PULL_FEEDS as P}from"./constants.mjs";import{__exports as T}from"./_virtual/index.mjs";import{getAssociatedTokenAddressSync as y}from"./node_modules/@solana/spl-token/lib/esm/state/mint.mjs";import{createAssociatedTokenAccountIdempotentInstruction as l}from"./node_modules/@solana/spl-token/lib/esm/instructions/associatedTokenAccount.mjs";import{TOKEN_PROGRAM_ID as N}from"./node_modules/@solana/spl-token/lib/esm/constants.mjs";const g={NAME_PROGRAM_ID:new t("namesLPneVptA9Z5rqUDD9tMTWEJwofgaYwp8cawRkX"),HASH_PREFIX:"SPL Name Service",ROOT_DOMAIN_ACCOUNT:new t("5eoDkP6vCQBXqDV9YN2NdUs3nmML3dMRNmEYpiyVNBm2"),REGISTER_PROGRAM_ID:new t("snshBoEQ9jx4QoHBpZDQPYdNCtw7RMxJvYrKFEhwaPJ"),REVERSE_LOOKUP_CLASS:new t("7NbD1vprif6apthEZAqhRfYuhrqnuderB8qpnfXGCc8H"),USDC_MINT:new t("4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU"),REFERRERS:[new t("3ogYncmMM5CmytsGCqKHydmXmKUZ6sGWvizkzqwT7zb1")],TOKENS_SYM_MINT:new Map([["4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU","USDC"],["EJwZgeZrdC8TXTQbQBoL6bfuAnFUUy1PVCMB4DYPzVaS","USDT"],["So11111111111111111111111111111111111111112","SOL"],["fidaWCioBQjieRrUQDxxS5Uxmq1CLi2VuVRyv4dEBey","FIDA"],["DL4ivZm3NVHWk9ZvtcqTchxoKArDK4rT3vbDx2gYVr7P","INJ"]]),PYTH_FEEDS:new Map([["4zMMC9srt5Ri5X14GAgXhaHii3GnPAEERYPJgZJDncDU",{price:"5SSkXsEKQepHHAewytPVwdej4epN1nxgLVM84L4KXgy7",product:"6NpdXrQEpmDZ3jZKmM2rhdmkd3H6QAk23j2x8bkXcHKA"}],["EJwZgeZrdC8TXTQbQBoL6bfuAnFUUy1PVCMB4DYPzVaS",{price:"38xoQ4oeJCBrcVvca2cGk7iV1dAfrmTR1kmhSCJQ8Jto",product:"C5wDxND9E61RZ1wZhaSTWkoA8udumaHnoQY6BBsiaVpn"}],["So11111111111111111111111111111111111111112",{price:"J83w4HKfqxwcq3BEMMkPFSppX3gqekLyLJBexebFVkix",product:"3Mnn2fX6rQyUsyELYms1sBJyChWofzSNRoqYzvgMVz5E"}],["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp",{price:"7teETxN9Y8VK6uJxsctHEwST75mKLLwPH1jaFdvTQCpD",product:"5kWV4bhHeZANzg5MWaYCQYEEKHjur5uz1mu5vuLHwiLB"}],["DL4ivZm3NVHWk9ZvtcqTchxoKArDK4rT3vbDx2gYVr7P",{price:"44uRsNnT35kjkscSu59MxRr9CfkLZWf6gny8bWqUbVxE",product:"7UHB783Nh4avW3Yw9yoktf2KjxipU56KPahA51RnCCYE"}]]),PYTH_MAPPING_ACC:new t("BmA9Z6FjioHJPpjT39QazZyhDRUdZy2ezwx4GiDdE2u2"),VAULT_OWNER:new t("SNSaTJbEv2iT3CUrCQYa9zpGjbBVWhFCPaSJHkaJX34")},h=(e,r,n)=>{const o=[e];r?o.push(r.toBuffer()):o.push(T.Buffer.alloc(32)),n?o.push(n.toBuffer()):o.push(T.Buffer.alloc(32));const[s]=t.findProgramAddressSync(o,g.NAME_PROGRAM_ID);return s},C=(t,e=g.ROOT_DOMAIN_ACCOUNT,r)=>{let n=D(t);return{pubkey:h(n,r,e),hashed:n}},G=t=>{t.endsWith(".sol")&&(t=t.slice(0,-4));const e=t.split(".");if(2===e.length){const t="\0".concat(e[0]),{pubkey:r}=C(e[1]);return{...C(t,r),isSub:!0,parent:r}}if(e.length>=3)throw new _("The domain is malformed");return{...C(t,g.ROOT_DOMAIN_ACCOUNT),isSub:!1,parent:void 0}},v=(t,e)=>{const{pubkey:r,parent:n}=G(t),o=D(r.toBase58());return h(o,g.REVERSE_LOOKUP_CLASS,e?n:void 0)};async function B(t,r,o,s,i,a,c,m){const R=await E(r),u=await h(R,c,m),A=a||await t.getMinimumBalanceForRentExemption(o);let _;if(m){const{registry:e}=await p(t,m);_=e.owner}return n(g.NAME_PROGRAM_ID,e.programId,u,i,s,R,new f(A),new d(o),c,m,_)}const U=async(n,o,s,i,c)=>{let[m]=await t.findProgramAddress([g.REGISTER_PROGRAM_ID.toBuffer()],g.REGISTER_PROGRAM_ID),R=await E(n.toBase58()),u=h(R,m,i);return[[],[new a({name:o}).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,g.ROOT_DOMAIN_ACCOUNT,u,e.programId,m,s,r,i,c)]]},b={utils:{getNameAccountKeySync:h,reverseLookup:async(t,e)=>{const r=D(e.toBase58()),n=h(r,g.REVERSE_LOOKUP_CLASS),{registry:o}=await u.retrieve(t,n);if(!o.data)throw new A("The registry data is empty");return S(o.data)},_deriveSync:C,getDomainKeySync:G,getReverseKeySync:v},constants:g,bindings:{createNameRegistry:B,updateNameRegistryData:async function(t,e,r,n,o,s){const a=await E(e),c=h(a,o,s);let m;return m=o||(await u.retrieve(t,c)).registry.owner,i(g.NAME_PROGRAM_ID,c,new d(r),n,m)},transferNameOwnership:async function(t,e,r,n,o,i){const a=await E(e),c=h(a,n,o);let m;return m=n||(await u.retrieve(t,c)).registry.owner,s(g.NAME_PROGRAM_ID,c,r,m,n,o,i)},deleteNameRegistry:async function(t,e,r,n,s){const i=await E(e),a=h(i,n,s);let c;return c=n||(await u.retrieve(t,a)).registry.owner,o(g.NAME_PROGRAM_ID,a,r,c)},registerDomainName:async(n,o,s,i,a,m=g.USDC_MINT,R)=>{if(o.includes(".")||o.trim().toLowerCase()!==o)throw new w("The domain is malformed");const[u]=t.findProgramAddressSync([g.REGISTER_PROGRAM_ID.toBuffer()],g.REGISTER_PROGRAM_ID),d=D(o),f=h(d,void 0,g.ROOT_DOMAIN_ACCOUNT),E=D(f.toBase58()),p=h(E,u),[A]=t.findProgramAddressSync([f.toBuffer()],g.REGISTER_PROGRAM_ID),_=g.REFERRERS.findIndex((t=>null==R?void 0:R.equals(t)));let M;const S=[];if(-1!==_&&R){M=y(m,R,!0);const t=await n.getAccountInfo(M);if(!(null==t?void 0:t.data)){const t=l(i,M,R,m);S.push(t)}}const O=y(m,g.VAULT_OWNER),P=b.constants.PYTH_FEEDS.get(m.toBase58());if(!P)throw new I("The Pyth account for the provided mint was not found");const T=new c({name:o,space:s,referrerIdxOpt:-1!=_?_:null}).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,g.ROOT_DOMAIN_ACCOUNT,f,p,e.programId,u,i,a,g.PYTH_MAPPING_ACC,new t(P.product),new t(P.price),O,N,r,A,M);return S.push(T),[[],S]},createReverseName:U,createSubdomain:async(t,e,r,n=2e3)=>{const o=[],s=e.split(".")[0];if(!s)throw new M("The subdomain is malformed");const{parent:i,pubkey:a}=G(e),c=await t.getMinimumBalanceForRentExemption(n+u.HEADER_LEN),m=await B(t,"\0".concat(s),n,r,r,c,void 0,i);o.push(m);const R=v(e,!0),d=await t.getAccountInfo(R);if(!(null==d?void 0:d.data)){const[,t]=await U(a,"\0".concat(s),r,i,r);o.push(...t)}return[[],o]},burnDomain:(r,n,o)=>{const{pubkey:s}=G(r),[i]=t.findProgramAddressSync([s.toBuffer()],g.REGISTER_PROGRAM_ID),[a]=t.findProgramAddressSync([s.toBuffer(),Uint8Array.from([1,1])],g.REGISTER_PROGRAM_ID);return(new m).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,e.programId,s,v(r),a,i,g.REVERSE_LOOKUP_CLASS,n,o)},transferSubdomain:async(t,e,r,n,o)=>{const{pubkey:i,isSub:a,parent:c}=G(e);if(!c||!a)throw new M("The subdomain is not valid");if(!o){const{registry:e}=await u.retrieve(t,i);o=e.owner}let m,R;n&&(m=c,R=(await u.retrieve(t,c)).registry.owner);return s(g.NAME_PROGRAM_ID,i,r,o,void 0,m,R)},registerDomainNameV2:async(n,o,s,i,a,c=g.USDC_MINT,m)=>{if(o.includes(".")||o.trim().toLowerCase()!==o)throw new w("The domain name is malformed");const[u]=t.findProgramAddressSync([g.REGISTER_PROGRAM_ID.toBuffer()],g.REGISTER_PROGRAM_ID),d=D(o),f=h(d,void 0,g.ROOT_DOMAIN_ACCOUNT),E=D(f.toBase58()),p=h(E,u),[A]=t.findProgramAddressSync([f.toBuffer()],g.REGISTER_PROGRAM_ID),_=g.REFERRERS.findIndex((t=>null==m?void 0:m.equals(t)));let M;const S=[];if(-1!==_&&m){M=y(c,m,!0);const t=await n.getAccountInfo(M);if(!(null==t?void 0:t.data)){const t=l(i,M,m,c);S.push(t)}}const T=y(c,g.VAULT_OWNER,!0),C=P.get(c.toBase58());if(!C)throw new I("The Pyth account for the provided mint was not found");const[G]=O(0,C),v=new R({name:o,space:s,referrerIdxOpt:-1!=_?_:null}).getInstruction(g.REGISTER_PROGRAM_ID,g.NAME_PROGRAM_ID,g.ROOT_DOMAIN_ACCOUNT,f,p,e.programId,u,i,i,i,a,G,T,N,r,A,M);return S.push(v),S}}};export{b as devnet};
//# sourceMappingURL=devnet.mjs.map
