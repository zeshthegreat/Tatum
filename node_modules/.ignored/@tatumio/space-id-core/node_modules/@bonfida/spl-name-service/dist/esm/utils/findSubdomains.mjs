import{REVERSE_LOOKUP_CLASS as e,NAME_PROGRAM_ID as t}from"../constants.mjs";import{deserializeReverse as s}from"./deserializeReverse.mjs";import{getReverseKeyFromDomainKey as o}from"./getReverseKeyFromDomainKey.mjs";const a=async(a,m)=>{const r=[{memcmp:{offset:0,bytes:m.toBase58()}},{memcmp:{offset:64,bytes:e.toBase58()}}],c=await a.getProgramAccounts(t,{filters:r}),f=[{memcmp:{offset:0,bytes:m.toBase58()}}],n=await a.getProgramAccounts(t,{filters:f,dataSlice:{offset:0,length:0}}),i=new Map(c.map((e=>[e.pubkey.toBase58(),s(e.account.data.slice(96),!0)]))),p=[];return n.forEach((e=>{const t=o(e.pubkey,m).toBase58(),s=i.get(t);s&&p.push(s)})),p};export{a as findSubdomains};
//# sourceMappingURL=findSubdomains.mjs.map
