{"version":3,"file":"utils.mjs","sources":["../../../../../../node_modules/borsh/lib/esm/utils.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { integers } from './types.js';\nexport function isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexport function expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexport function expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\n// Validate Schema\nvar VALID_STRING_TYPES = integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexport { ErrorSchema };\nexport function validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n"],"names":["extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","isArrayLike","value","isArray","length","expect_type","type","fieldPath","Error","concat","join","expect_bigint","includes","expect_same_size","expected","expect_enum","VALID_STRING_TYPES","integers","VALID_OBJECT_KEYS","ErrorSchema","_super","schema","message","JSON","stringify","validate_schema","keys","key","_i","schema_1","sch","struct","validate_enum_schema","len","validate_array_schema","validate_map_schema","validate_struct_schema"],"mappings":"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","x_google_ignoreList":[0]}