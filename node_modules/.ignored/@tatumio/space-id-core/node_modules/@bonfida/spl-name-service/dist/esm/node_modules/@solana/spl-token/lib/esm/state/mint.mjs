import"../../../../../buffer/index.mjs";import{struct as t,u32 as i,u8 as o}from"@solana/buffer-layout";import{publicKey as r,u64 as e,bool as n}from"@solana/buffer-layout-utils";import{PublicKey as a}from"@solana/web3.js";import{TOKEN_PROGRAM_ID as f,ASSOCIATED_TOKEN_PROGRAM_ID as s}from"../constants.mjs";import{TokenAccountNotFoundError as u,TokenInvalidAccountOwnerError as m,TokenInvalidAccountSizeError as l,TokenInvalidMintError as p,TokenOwnerOffCurveError as c}from"../errors.mjs";import{AccountType as d,ACCOUNT_TYPE_SIZE as h}from"../extensions/accountType.mjs";import{ACCOUNT_SIZE as y}from"./account.mjs";import{MULTISIG_SIZE as w}from"./multisig.mjs";import{__exports as A}from"../../../../../../_virtual/index.mjs";const j=t([i("mintAuthorityOption"),r("mintAuthority"),e("supply"),o("decimals"),n("isInitialized"),i("freezeAuthorityOption"),r("freezeAuthority")]),z=j.span;async function g(t,i,o,r=f){return x(i,await t.getAccountInfo(i,o),r)}function x(t,i,o=f){if(!i)throw new u;if(!i.owner.equals(o))throw new m;if(i.data.length<z)throw new l;const r=j.decode(i.data.slice(0,z));let e=A.Buffer.alloc(0);if(i.data.length>z){if(i.data.length<=y)throw new l;if(i.data.length===w)throw new l;if(i.data[y]!=d.Mint)throw new p;e=i.data.slice(y+h)}return{address:t,mintAuthority:r.mintAuthorityOption?r.mintAuthority:null,supply:r.supply,decimals:r.decimals,isInitialized:r.isInitialized,freezeAuthority:r.freezeAuthorityOption?r.freezeAuthority:null,tlvData:e}}function B(t,i,o=!1,r=f,e=s){if(!o&&!a.isOnCurve(i.toBuffer()))throw new c;const[n]=a.findProgramAddressSync([i.toBuffer(),r.toBuffer(),t.toBuffer()],e);return n}export{z as MINT_SIZE,j as MintLayout,B as getAssociatedTokenAddressSync,g as getMint,x as unpackMint};
//# sourceMappingURL=mint.mjs.map
