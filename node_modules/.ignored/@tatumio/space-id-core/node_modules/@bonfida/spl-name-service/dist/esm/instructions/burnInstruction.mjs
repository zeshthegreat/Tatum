import"../node_modules/buffer/index.mjs";import{TransactionInstruction as i}from"@solana/web3.js";import{serialize as e}from"../node_modules/borsh/lib/esm/index.mjs";import{__exports as s}from"../_virtual/index.mjs";class r{constructor(){this.tag=16}serialize(){return e(r.schema,this)}getInstruction(e,r,t,u,p,a,b,n,o,l){const m=s.Buffer.from(this.serialize());let h=[];return h.push({pubkey:r,isSigner:!1,isWritable:!1}),h.push({pubkey:t,isSigner:!1,isWritable:!1}),h.push({pubkey:u,isSigner:!1,isWritable:!0}),h.push({pubkey:p,isSigner:!1,isWritable:!0}),h.push({pubkey:a,isSigner:!1,isWritable:!0}),h.push({pubkey:b,isSigner:!1,isWritable:!0}),h.push({pubkey:n,isSigner:!1,isWritable:!1}),h.push({pubkey:o,isSigner:!0,isWritable:!1}),h.push({pubkey:l,isSigner:!1,isWritable:!0}),new i({keys:h,programId:e,data:m})}}r.schema={struct:{tag:"u8"}};export{r as burnInstruction};
//# sourceMappingURL=burnInstruction.mjs.map
