import { AbstractCardanoRpc } from './AbstractCardanoRpc';
import { PostI } from '../../../dto/PostI';
import { BroadcastTxRequest, BroadcastTxResponse, CosmosRpcSuite, GetAccountDetailsRequest, GetAccountDetailsResponse, GetAccountsResponse, GetAllBalancesRequest, GetAllBalancesResponse, GetAllEvidenceResponse, GetAllowanceRequest, GetAllowanceResponse, GetAllParamsResponse, GetAllProposalsRequest, GetAllProposalsResponse, GetAnnualProvisionsResponse, GetAppliedPlanRequest, GetAppliedPlanResponse, GetBankParamsResponse, GetBlockByHeightRequest, GetBlockByHeightResponse, GetCommunityPoolResponse, GetCurrentPlanResponse, GetDelegationRewardsRequest, GetDelegationRewardsResponse, GetDelegationsRequest, GetDelegationsResponse, GetDelegationTotalRewardsRequest, GetDelegationTotalRewardsResponse, GetDelegatorValidatorsRequest, GetDelegatorValidatorsResponse, GetDelegatorWithdrawAddressRequest, GetDelegatorWithdrawAddressResponse, GetDenomMetadataRequest, GetDenomMetadataResponse, GetDenomsMetadataResponse, GetDepositsRequest, GetDepositsResponse, GetDistributionParamsResponse, GetGovernanceParamsRequest, GetGovernanceParamsResponse, GetGrantsForAddressRequest, GetGrantsForAddressResponse, GetGrantsRequest, GetGrantsResponse, GetHistoricalInfoRequest, GetHistoricalInfoResponse, GetInflationResponse, GetLatestBlockResponse, GetLatestValidatorSetResponse, GetMintingParamsResponse, GetModuleVersionsResponse, GetNodeInfoResponse, GetPoolInfoResponse, GetProposalDetailsRequest, GetProposalDetailsResponse, GetRedelegationsRequest, GetRedelegationsResponse, GetSigningInfoByConsAddressRequest, GetSigningInfoByConsAddressResponse, GetSigningInfosResponse, GetSlashingParamsResponse, GetSpecificParamRequest, GetSpecificParamResponse, GetStakingParamsResponse, GetSupplyOfCoinRequest, GetSupplyOfCoinResponse, GetSyncingResponse, GetTallyResultRequest, GetTallyResultResponse, GetTotalSupplyResponse, GetUnbondingDelegationRequest, GetUnbondingDelegationResponse, GetUnbondingDelegationsRequest, GetUpgradedConsensusStateResponse, GetValidatorCommissionRequest, GetValidatorCommissionResponse, GetValidatorInfoRequest, GetValidatorInfoResponse, GetValidatorOutstandingRewardsRequest, GetValidatorOutstandingRewardsResponse, GetValidatorSetByHeightRequest, GetValidatorSetByHeightResponse, GetValidatorSlashesRequest, GetValidatorSlashesResponse, GetValidatorsRequest, GetValidatorsResponse, GetVoteRequest, GetVoteResponse, GetVotesRequest, GetVotesResponse, PaginationRequest, SimulateRequest, SimulateResponse, TxResponse, TxsByEventRequest, TxsByEventResponse, UnbondingDelegationResponse } from '../../../dto/rpc/CosmosRpcSuite';
export declare abstract class AbstractCosmosRpc extends AbstractCardanoRpc implements CosmosRpcSuite {
    protected abstract get<T>(post: PostI): Promise<T>;
    private sendGet;
    getAccounts(params: PaginationRequest): Promise<GetAccountsResponse>;
    getAccountDetails(params: GetAccountDetailsRequest): Promise<GetAccountDetailsResponse>;
    getAllParams(): Promise<GetAllParamsResponse>;
    getAllBalances(params: GetAllBalancesRequest): Promise<GetAllBalancesResponse>;
    getDenomsMetadata(params: PaginationRequest): Promise<GetDenomsMetadataResponse>;
    getDenomMetadata(params: GetDenomMetadataRequest): Promise<GetDenomMetadataResponse>;
    getBankParams(): Promise<GetBankParamsResponse>;
    getTotalSupply(params: PaginationRequest): Promise<GetTotalSupplyResponse>;
    getSupplyOfCoin(params: GetSupplyOfCoinRequest): Promise<GetSupplyOfCoinResponse>;
    getLatestBlock(): Promise<GetLatestBlockResponse>;
    getBlockByHeight(params: GetBlockByHeightRequest): Promise<GetBlockByHeightResponse>;
    getNodeInfo(): Promise<GetNodeInfoResponse>;
    getSyncing(): Promise<GetSyncingResponse>;
    getLatestValidatorSet(params: PaginationRequest): Promise<GetLatestValidatorSetResponse>;
    getValidatorSetByHeight(params: GetValidatorSetByHeightRequest): Promise<GetValidatorSetByHeightResponse>;
    getCommunityPool(): Promise<GetCommunityPoolResponse>;
    getDelegationTotalRewards(params: GetDelegationTotalRewardsRequest): Promise<GetDelegationTotalRewardsResponse>;
    getDelegationRewards(params: GetDelegationRewardsRequest): Promise<GetDelegationRewardsResponse>;
    getDelegatorValidators(params: GetDelegatorValidatorsRequest): Promise<GetDelegatorValidatorsResponse>;
    getDelegatorWithdrawAddress(params: GetDelegatorWithdrawAddressRequest): Promise<GetDelegatorWithdrawAddressResponse>;
    getDistributionParams(): Promise<GetDistributionParamsResponse>;
    getValidatorCommission(params: GetValidatorCommissionRequest): Promise<GetValidatorCommissionResponse>;
    getValidatorOutstandingRewards(params: GetValidatorOutstandingRewardsRequest): Promise<GetValidatorOutstandingRewardsResponse>;
    getValidatorSlashes(params: GetValidatorSlashesRequest): Promise<GetValidatorSlashesResponse>;
    getAllEvidence(params: PaginationRequest): Promise<GetAllEvidenceResponse>;
    getGovernanceParams(params: GetGovernanceParamsRequest): Promise<GetGovernanceParamsResponse>;
    getAllProposals(params: GetAllProposalsRequest): Promise<GetAllProposalsResponse>;
    getProposalDetails(params: GetProposalDetailsRequest): Promise<GetProposalDetailsResponse>;
    getDeposits(params: GetDepositsRequest): Promise<GetDepositsResponse>;
    getTallyResult(params: GetTallyResultRequest): Promise<GetTallyResultResponse>;
    getVotes(params: GetVotesRequest): Promise<GetVotesResponse>;
    getVote(params: GetVoteRequest): Promise<GetVoteResponse>;
    getAnnualProvisions(): Promise<GetAnnualProvisionsResponse>;
    getInflation(): Promise<GetInflationResponse>;
    getMintingParams(): Promise<GetMintingParamsResponse>;
    getSpecificParam(params: GetSpecificParamRequest): Promise<GetSpecificParamResponse>;
    getSlashingParams(): Promise<GetSlashingParamsResponse>;
    getSigningInfos(): Promise<GetSigningInfosResponse>;
    getSingingInfoByConsAddress(params: GetSigningInfoByConsAddressRequest): Promise<GetSigningInfoByConsAddressResponse>;
    getDelegations(params: GetDelegationsRequest): Promise<GetDelegationsResponse>;
    getRedelegations(params: GetRedelegationsRequest): Promise<GetRedelegationsResponse>;
    getUnbondingDelegations(params: GetUnbondingDelegationsRequest): Promise<UnbondingDelegationResponse>;
    getValidators(params: GetValidatorsRequest): Promise<GetValidatorsResponse>;
    getValidatorInfo(params: GetValidatorInfoRequest): Promise<GetValidatorInfoResponse>;
    getHistoricalInfo(params: GetHistoricalInfoRequest): Promise<GetHistoricalInfoResponse>;
    getStakingParams(): Promise<GetStakingParamsResponse>;
    getPoolInfo(): Promise<GetPoolInfoResponse>;
    getValidatorsForGivenStatus(params: GetValidatorsRequest): Promise<GetValidatorsResponse>;
    getValidatorInfoForAddress(params: GetValidatorInfoRequest): Promise<GetValidatorInfoResponse>;
    getDelegationsForValidator(params: GetDelegationsRequest): Promise<GetDelegationsResponse>;
    getUnbondingDelegation(params: GetUnbondingDelegationRequest): Promise<GetUnbondingDelegationResponse>;
    getAppliedPlan(params: GetAppliedPlanRequest): Promise<GetAppliedPlanResponse>;
    getCurrentPlan(): Promise<GetCurrentPlanResponse>;
    getModuleVersions(): Promise<GetModuleVersionsResponse>;
    getUpgradedConsensusState(lastHeight: number): Promise<GetUpgradedConsensusStateResponse>;
    getGrants(params: GetGrantsRequest): Promise<GetGrantsResponse>;
    getAllowance(params: GetAllowanceRequest): Promise<GetAllowanceResponse>;
    getAllowanceForAddress(params: GetGrantsForAddressRequest): Promise<GetGrantsForAddressResponse>;
    simulate(params: SimulateRequest): Promise<SimulateResponse>;
    getTxsByEvent(params: TxsByEventRequest): Promise<TxsByEventResponse>;
    broadcastTx(params: BroadcastTxRequest): Promise<BroadcastTxResponse>;
    getTxByHash(hash: string): Promise<TxResponse>;
}
