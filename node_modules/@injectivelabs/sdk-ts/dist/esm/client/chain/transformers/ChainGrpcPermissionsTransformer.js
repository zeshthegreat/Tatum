/**
 * @category Chain Grpc Transformer
 */
export class ChainGrpcPermissionsTransformer {
    static moduleParamsResponseToModuleParams(response) {
        const params = response.params;
        return {
            wasmHookQueryMaxGas: params.wasmHookQueryMaxGas,
        };
    }
    static grpcNamespaceToNamespace(grpcNamespace) {
        return {
            denom: grpcNamespace.denom,
            wasmHook: grpcNamespace.wasmHook,
            mintsPaused: grpcNamespace.mintsPaused,
            sendsPaused: grpcNamespace.sendsPaused,
            burnsPaused: grpcNamespace.burnsPaused,
            rolePermissions: grpcNamespace.rolePermissions,
            addressRoles: grpcNamespace.addressRoles,
        };
    }
    static addressRolesResponseToAddressRoles(response) {
        return response.roles.map((role) => {
            return {
                roles: role,
            };
        });
    }
    static addressesByRolesResponseToAddressesByRoles(response) {
        return response.addresses.map((address) => {
            return {
                addresses: address,
            };
        });
    }
    static allNamespacesResponseToAllNamespaces(response) {
        return response.namespaces.map((namespace) => {
            ChainGrpcPermissionsTransformer.grpcNamespaceToNamespace(namespace);
        });
    }
    static namespaceByDenomResponceToNamespaceByDenom(response) {
        return ChainGrpcPermissionsTransformer.grpcNamespaceToNamespace(response.namespace);
    }
    static vouchersForAddressResponseToVouchersForAddress(response) {
        return response.vouchers.map((voucher) => {
            return {
                vouchers: voucher,
            };
        });
    }
}
//# sourceMappingURL=ChainGrpcPermissionsTransformer.js.map