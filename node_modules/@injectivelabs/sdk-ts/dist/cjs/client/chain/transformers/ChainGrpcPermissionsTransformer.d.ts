import { Namespace, PermissionsModuleParams, GrpcPermissionsNamespace } from '../types/permissions';
import { InjectivePermissionsV1Beta1Query } from '@injectivelabs/core-proto-ts';
/**
 * @category Chain Grpc Transformer
 */
export declare class ChainGrpcPermissionsTransformer {
    static moduleParamsResponseToModuleParams(response: InjectivePermissionsV1Beta1Query.QueryParamsResponse): PermissionsModuleParams;
    static grpcNamespaceToNamespace(grpcNamespace: GrpcPermissionsNamespace): Namespace;
    static addressRolesResponseToAddressRoles(response: InjectivePermissionsV1Beta1Query.QueryAddressRolesResponse): {
        roles: string;
    }[];
    static addressesByRolesResponseToAddressesByRoles(response: InjectivePermissionsV1Beta1Query.QueryAddressesByRoleResponse): {
        addresses: string;
    }[];
    static allNamespacesResponseToAllNamespaces(response: InjectivePermissionsV1Beta1Query.QueryAllNamespacesResponse): void[];
    static namespaceByDenomResponceToNamespaceByDenom(response: InjectivePermissionsV1Beta1Query.QueryNamespaceByDenomResponse): Namespace;
    static vouchersForAddressResponseToVouchersForAddress(response: InjectivePermissionsV1Beta1Query.QueryVouchersForAddressResponse): {
        vouchers: import("@injectivelabs/core-proto-ts/cjs/cosmos/base/v1beta1/coin").Coin;
    }[];
}
//# sourceMappingURL=ChainGrpcPermissionsTransformer.d.ts.map