import { InjectivePermissionsV1Beta1Query } from '@injectivelabs/core-proto-ts';
import BaseGrpcConsumer from '../../base/BaseGrpcConsumer';
/**
 * @category Chain Grpc API
 */
export declare class ChainGrpcPermissionsApi extends BaseGrpcConsumer {
    protected module: string;
    protected client: InjectivePermissionsV1Beta1Query.QueryClientImpl;
    constructor(endpoint: string);
    fetchAddressesByRole({ denom, role }: {
        denom: string;
        role: string;
    }): Promise<{
        addresses: string;
    }[]>;
    fetchAddressRoles({ address, denom, }: {
        address: string;
        denom: string;
    }): Promise<{
        roles: string;
    }[]>;
    fetchAllNamespaces(): Promise<void[]>;
    fetchModuleParams(): Promise<import("../types").PermissionsModuleParams>;
    fetchNamespaceByDenom({ denom, includeRoles, }: {
        denom: string;
        includeRoles: boolean;
    }): Promise<import("../types").Namespace>;
    fetchVouchersForAddress({ address }: {
        address: string;
    }): Promise<{
        vouchers: import("@injectivelabs/core-proto-ts/cjs/cosmos/base/v1beta1/coin").Coin;
    }[]>;
}
//# sourceMappingURL=ChainGrpcPermissionsApi.d.ts.map