"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GrpcWebError = exports.GrpcWebImpl = exports.PruningServiceGetBlockIndexerRetainHeightDesc = exports.PruningServiceSetBlockIndexerRetainHeightDesc = exports.PruningServiceGetTxIndexerRetainHeightDesc = exports.PruningServiceSetTxIndexerRetainHeightDesc = exports.PruningServiceGetBlockResultsRetainHeightDesc = exports.PruningServiceSetBlockResultsRetainHeightDesc = exports.PruningServiceGetBlockRetainHeightDesc = exports.PruningServiceSetBlockRetainHeightDesc = exports.PruningServiceDesc = exports.PruningServiceClientImpl = exports.protobufPackage = void 0;
/* eslint-disable */
const grpc_web_1 = require("@injectivelabs/grpc-web");
const browser_headers_1 = require("browser-headers");
const pruning_1 = require("./pruning");
exports.protobufPackage = "cometbft.services.pruning.v1";
class PruningServiceClientImpl {
    constructor(rpc) {
        this.rpc = rpc;
        this.SetBlockRetainHeight = this.SetBlockRetainHeight.bind(this);
        this.GetBlockRetainHeight = this.GetBlockRetainHeight.bind(this);
        this.SetBlockResultsRetainHeight = this.SetBlockResultsRetainHeight.bind(this);
        this.GetBlockResultsRetainHeight = this.GetBlockResultsRetainHeight.bind(this);
        this.SetTxIndexerRetainHeight = this.SetTxIndexerRetainHeight.bind(this);
        this.GetTxIndexerRetainHeight = this.GetTxIndexerRetainHeight.bind(this);
        this.SetBlockIndexerRetainHeight = this.SetBlockIndexerRetainHeight.bind(this);
        this.GetBlockIndexerRetainHeight = this.GetBlockIndexerRetainHeight.bind(this);
    }
    SetBlockRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceSetBlockRetainHeightDesc, pruning_1.SetBlockRetainHeightRequest.fromPartial(request), metadata);
    }
    GetBlockRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceGetBlockRetainHeightDesc, pruning_1.GetBlockRetainHeightRequest.fromPartial(request), metadata);
    }
    SetBlockResultsRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceSetBlockResultsRetainHeightDesc, pruning_1.SetBlockResultsRetainHeightRequest.fromPartial(request), metadata);
    }
    GetBlockResultsRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceGetBlockResultsRetainHeightDesc, pruning_1.GetBlockResultsRetainHeightRequest.fromPartial(request), metadata);
    }
    SetTxIndexerRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceSetTxIndexerRetainHeightDesc, pruning_1.SetTxIndexerRetainHeightRequest.fromPartial(request), metadata);
    }
    GetTxIndexerRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceGetTxIndexerRetainHeightDesc, pruning_1.GetTxIndexerRetainHeightRequest.fromPartial(request), metadata);
    }
    SetBlockIndexerRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceSetBlockIndexerRetainHeightDesc, pruning_1.SetBlockIndexerRetainHeightRequest.fromPartial(request), metadata);
    }
    GetBlockIndexerRetainHeight(request, metadata) {
        return this.rpc.unary(exports.PruningServiceGetBlockIndexerRetainHeightDesc, pruning_1.GetBlockIndexerRetainHeightRequest.fromPartial(request), metadata);
    }
}
exports.PruningServiceClientImpl = PruningServiceClientImpl;
exports.PruningServiceDesc = { serviceName: "cometbft.services.pruning.v1.PruningService" };
exports.PruningServiceSetBlockRetainHeightDesc = {
    methodName: "SetBlockRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.SetBlockRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.SetBlockRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
exports.PruningServiceGetBlockRetainHeightDesc = {
    methodName: "GetBlockRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.GetBlockRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.GetBlockRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
exports.PruningServiceSetBlockResultsRetainHeightDesc = {
    methodName: "SetBlockResultsRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.SetBlockResultsRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.SetBlockResultsRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
exports.PruningServiceGetBlockResultsRetainHeightDesc = {
    methodName: "GetBlockResultsRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.GetBlockResultsRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.GetBlockResultsRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
exports.PruningServiceSetTxIndexerRetainHeightDesc = {
    methodName: "SetTxIndexerRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.SetTxIndexerRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.SetTxIndexerRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
exports.PruningServiceGetTxIndexerRetainHeightDesc = {
    methodName: "GetTxIndexerRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.GetTxIndexerRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.GetTxIndexerRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
exports.PruningServiceSetBlockIndexerRetainHeightDesc = {
    methodName: "SetBlockIndexerRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.SetBlockIndexerRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.SetBlockIndexerRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
exports.PruningServiceGetBlockIndexerRetainHeightDesc = {
    methodName: "GetBlockIndexerRetainHeight",
    service: exports.PruningServiceDesc,
    requestStream: false,
    responseStream: false,
    requestType: {
        serializeBinary() {
            return pruning_1.GetBlockIndexerRetainHeightRequest.encode(this).finish();
        },
    },
    responseType: {
        deserializeBinary(data) {
            const value = pruning_1.GetBlockIndexerRetainHeightResponse.decode(data);
            return Object.assign(Object.assign({}, value), { toObject() {
                    return value;
                } });
        },
    },
};
class GrpcWebImpl {
    constructor(host, options) {
        this.host = host;
        this.options = options;
    }
    unary(methodDesc, _request, metadata) {
        var _a;
        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);
        const maybeCombinedMetadata = metadata && this.options.metadata
            ? new browser_headers_1.BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))
            : metadata || this.options.metadata;
        return new Promise((resolve, reject) => {
            grpc_web_1.grpc.unary(methodDesc, {
                request,
                host: this.host,
                metadata: maybeCombinedMetadata,
                transport: this.options.transport,
                debug: this.options.debug,
                onEnd: function (response) {
                    if (response.status === grpc_web_1.grpc.Code.OK) {
                        resolve(response.message.toObject());
                    }
                    else {
                        const err = new GrpcWebError(response.statusMessage, response.status, response.trailers);
                        reject(err);
                    }
                },
            });
        });
    }
}
exports.GrpcWebImpl = GrpcWebImpl;
var tsProtoGlobalThis = (() => {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
class GrpcWebError extends tsProtoGlobalThis.Error {
    constructor(message, code, metadata) {
        super(message);
        this.code = code;
        this.metadata = metadata;
    }
}
exports.GrpcWebError = GrpcWebError;
